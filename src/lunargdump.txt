Thread 0, Frame 0:
vkCreateInstance(pCreateInfo, pAllocator, pInstance) returns VkResult VK_SUCCESS (0):
    pCreateInfo:                    const VkInstanceCreateInfo* = 0x7fff0cfdb140:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO (1)
        pNext:                          const void* = NULL
        flags:                          VkInstanceCreateFlags = 0
        pApplicationInfo:               const VkApplicationInfo* = 0x7fff0cfdb310:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_APPLICATION_INFO (0)
            pNext:                          const void* = NULL
            pApplicationName:               const char* = "Offloaded Rendering Test"
            applicationVersion:             uint32_t = 1
            pEngineName:                    const char* = ""
            engineVersion:                  uint32_t = 1
            apiVersion:                     uint32_t = 4202496
        enabledLayerCount:              uint32_t = 2
        ppEnabledLayerNames:            const char* const* = 0x185feb0
            ppEnabledLayerNames[0]:         const char* const = "VK_LAYER_KHRONOS_validation"
            ppEnabledLayerNames[1]:         const char* const = "VK_LAYER_LUNARG_api_dump"
        enabledExtensionCount:          uint32_t = 3
        ppEnabledExtensionNames:        const char* const* = 0x197ccd0
            ppEnabledExtensionNames[0]:     const char* const = "VK_KHR_surface"
            ppEnabledExtensionNames[1]:     const char* const = "VK_KHR_xcb_surface"
            ppEnabledExtensionNames[2]:     const char* const = "VK_EXT_debug_utils"
        pNext:                          VkDebugUtilsMessengerCreateInfoEXT = 0x7fff0cfdb2e0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT (1000128004)
            pNext:                          const void* = NULL
            flags:                          VkDebugUtilsMessengerCreateFlagsEXT = 0
            messageSeverity:                VkDebugUtilsMessageSeverityFlagsEXT = 4353 (VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT)
            messageType:                    VkDebugUtilsMessageTypeFlagsEXT = 7 (VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT)
            pfnUserCallback:                PFN_vkDebugUtilsMessengerCallbackEXT = 1
            pUserData:                      void* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pInstance:                      VkInstance* = 0x197d070

Thread 0, Frame 0:
vkCreateDebugUtilsMessengerEXT(instance, pCreateInfo, pAllocator, pMessenger) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pCreateInfo:                    const VkDebugUtilsMessengerCreateInfoEXT* = 0x7fff0cfdb3c0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT (1000128004)
        pNext:                          const void* = NULL
        flags:                          VkDebugUtilsMessengerCreateFlagsEXT = 0
        messageSeverity:                VkDebugUtilsMessageSeverityFlagsEXT = 4353 (VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT)
        messageType:                    VkDebugUtilsMessageTypeFlagsEXT = 7 (VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT | VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT)
        pfnUserCallback:                PFN_vkDebugUtilsMessengerCallbackEXT = 1
        pUserData:                      void* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMessenger:                     VkDebugUtilsMessengerEXT* = 0x1ccbaa0

Thread 0, Frame 0:
vkCreateXcbSurfaceKHR(instance, pCreateInfo, pAllocator, pSurface) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pCreateInfo:                    const VkXcbSurfaceCreateInfoKHR* = 0x7fff0cfdb310:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR (1000005000)
        pNext:                          const void* = NULL
        flags:                          VkXcbSurfaceCreateFlagsKHR = 0
        connection:                     xcb_ = 0x1865730
        window:                         xcb_ = 44040201
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSurface:                       VkSurfaceKHR* = 0x1e69370

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pPhysicalDeviceCount:           uint32_t* = 2
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pPhysicalDeviceCount:           uint32_t* = 2
    pPhysicalDevices:               VkPhysicalDevice* = 0x1cfdc00
        pPhysicalDevices[0]:            VkPhysicalDevice = 0x1dd8960
        pPhysicalDevices[1]:            VkPhysicalDevice = 0x1e682e0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1dd8960
    pProperties:                    VkPhysicalDeviceProperties* = 0x1916220:
        apiVersion:                     uint32_t = 4202641
        driverVersion:                  uint32_t = 83894278
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 16027
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630 (CFL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x1916334
            pipelineCacheUUID[0]:           uint8_t = 39
            pipelineCacheUUID[1]:           uint8_t = 48
            pipelineCacheUUID[2]:           uint8_t = 120
            pipelineCacheUUID[3]:           uint8_t = 96
            pipelineCacheUUID[4]:           uint8_t = 187
            pipelineCacheUUID[5]:           uint8_t = 233
            pipelineCacheUUID[6]:           uint8_t = 118
            pipelineCacheUUID[7]:           uint8_t = 122
            pipelineCacheUUID[8]:           uint8_t = 114
            pipelineCacheUUID[9]:           uint8_t = 234
            pipelineCacheUUID[10]:          uint8_t = 63
            pipelineCacheUUID[11]:          uint8_t = 40
            pipelineCacheUUID[12]:          uint8_t = 240
            pipelineCacheUUID[13]:          uint8_t = 81
            pipelineCacheUUID[14]:          uint8_t = 226
            pipelineCacheUUID[15]:          uint8_t = 196
        limits:                         VkPhysicalDeviceLimits = 0x1916348:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 1073741824
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 28
            maxVertexInputBindings:         uint32_t = 28
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 8
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x1916424
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1792
            maxComputeWorkGroupSize:        uint32_t[3] = 0x1916434
                maxComputeWorkGroupSize[0]:     uint32_t = 1792
                maxComputeWorkGroupSize[1]:     uint32_t = 1792
                maxComputeWorkGroupSize[2]:     uint32_t = 1792
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x1916460
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x1916468
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x1916504
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x191650c
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 2047.99
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x1916540:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x1f31060:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x1f31174
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x1f31188:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x1f31264
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x1f31274
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x1f312a0
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x1f312a8
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x1f31344
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x1f3134c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x1f31380:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1dd8960
    pFeatures:                      VkPhysicalDeviceFeatures* = 0x1864400:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 0
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 1
        textureCompressionASTC_LDR:     VkBool32 = 1
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 0
        shaderStorageImageReadWithoutFormat: VkBool32 = 0
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 1
        shaderResourceResidency:        VkBool32 = 0
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 0
        sparseResidencyBuffer:          VkBool32 = 0
        sparseResidencyImage2D:         VkBool32 = 0
        sparseResidencyImage3D:         VkBool32 = 0
        sparseResidency2Samples:        VkBool32 = 0
        sparseResidency4Samples:        VkBool32 = 0
        sparseResidency8Samples:        VkBool32 = 0
        sparseResidency16Samples:       VkBool32 = 0
        sparseResidencyAliased:         VkBool32 = 0
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pFeatures:                      VkPhysicalDeviceFeatures* = 0x1f34a60:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 1
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 0
        textureCompressionASTC_LDR:     VkBool32 = 0
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 1
        shaderStorageImageReadWithoutFormat: VkBool32 = 1
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 1
        shaderResourceResidency:        VkBool32 = 1
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 1
        sparseResidencyBuffer:          VkBool32 = 1
        sparseResidencyImage2D:         VkBool32 = 1
        sparseResidencyImage3D:         VkBool32 = 1
        sparseResidency2Samples:        VkBool32 = 1
        sparseResidency4Samples:        VkBool32 = 1
        sparseResidency8Samples:        VkBool32 = 1
        sparseResidency16Samples:       VkBool32 = 1
        sparseResidencyAliased:         VkBool32 = 1
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1dd8960
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf30:
        apiVersion:                     uint32_t = 4202641
        driverVersion:                  uint32_t = 83894278
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 16027
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630 (CFL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb044
            pipelineCacheUUID[0]:           uint8_t = 39
            pipelineCacheUUID[1]:           uint8_t = 48
            pipelineCacheUUID[2]:           uint8_t = 120
            pipelineCacheUUID[3]:           uint8_t = 96
            pipelineCacheUUID[4]:           uint8_t = 187
            pipelineCacheUUID[5]:           uint8_t = 233
            pipelineCacheUUID[6]:           uint8_t = 118
            pipelineCacheUUID[7]:           uint8_t = 122
            pipelineCacheUUID[8]:           uint8_t = 114
            pipelineCacheUUID[9]:           uint8_t = 234
            pipelineCacheUUID[10]:          uint8_t = 63
            pipelineCacheUUID[11]:          uint8_t = 40
            pipelineCacheUUID[12]:          uint8_t = 240
            pipelineCacheUUID[13]:          uint8_t = 81
            pipelineCacheUUID[14]:          uint8_t = 226
            pipelineCacheUUID[15]:          uint8_t = 196
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb058:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 1073741824
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 28
            maxVertexInputBindings:         uint32_t = 28
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 8
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb134
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1792
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb144
                maxComputeWorkGroupSize[0]:     uint32_t = 1792
                maxComputeWorkGroupSize[1]:     uint32_t = 1792
                maxComputeWorkGroupSize[2]:     uint32_t = 1792
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb170
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x7fff0cfdb178
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb214
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x7fff0cfdb21c
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 2047.99
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb250:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf30:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb044
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb058:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb134
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb144
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb170
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfdb178
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb214
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfdb21c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb250:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pPhysicalDeviceCount:           uint32_t* = 2
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pPhysicalDeviceCount:           uint32_t* = 2
    pPhysicalDevices:               VkPhysicalDevice* = 0x1d21740
        pPhysicalDevices[0]:            VkPhysicalDevice = 0x1dd8960
        pPhysicalDevices[1]:            VkPhysicalDevice = 0x1e682e0

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1dd8960
    pFeatures:                      VkPhysicalDeviceFeatures* = 0x1864400:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 0
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 1
        textureCompressionASTC_LDR:     VkBool32 = 1
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 0
        shaderStorageImageReadWithoutFormat: VkBool32 = 0
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 1
        shaderResourceResidency:        VkBool32 = 0
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 0
        sparseResidencyBuffer:          VkBool32 = 0
        sparseResidencyImage2D:         VkBool32 = 0
        sparseResidencyImage3D:         VkBool32 = 0
        sparseResidency2Samples:        VkBool32 = 0
        sparseResidency4Samples:        VkBool32 = 0
        sparseResidency8Samples:        VkBool32 = 0
        sparseResidency16Samples:       VkBool32 = 0
        sparseResidencyAliased:         VkBool32 = 0
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pFeatures:                      VkPhysicalDeviceFeatures* = 0x1f34a60:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 1
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 0
        textureCompressionASTC_LDR:     VkBool32 = 0
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 1
        shaderStorageImageReadWithoutFormat: VkBool32 = 1
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 1
        shaderResourceResidency:        VkBool32 = 1
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 1
        sparseResidencyBuffer:          VkBool32 = 1
        sparseResidencyImage2D:         VkBool32 = 1
        sparseResidencyImage3D:         VkBool32 = 1
        sparseResidency2Samples:        VkBool32 = 1
        sparseResidency4Samples:        VkBool32 = 1
        sparseResidency8Samples:        VkBool32 = 1
        sparseResidency16Samples:       VkBool32 = 1
        sparseResidencyAliased:         VkBool32 = 1
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1dd8960
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf10:
        apiVersion:                     uint32_t = 4202641
        driverVersion:                  uint32_t = 83894278
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 16027
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630 (CFL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb024
            pipelineCacheUUID[0]:           uint8_t = 39
            pipelineCacheUUID[1]:           uint8_t = 48
            pipelineCacheUUID[2]:           uint8_t = 120
            pipelineCacheUUID[3]:           uint8_t = 96
            pipelineCacheUUID[4]:           uint8_t = 187
            pipelineCacheUUID[5]:           uint8_t = 233
            pipelineCacheUUID[6]:           uint8_t = 118
            pipelineCacheUUID[7]:           uint8_t = 122
            pipelineCacheUUID[8]:           uint8_t = 114
            pipelineCacheUUID[9]:           uint8_t = 234
            pipelineCacheUUID[10]:          uint8_t = 63
            pipelineCacheUUID[11]:          uint8_t = 40
            pipelineCacheUUID[12]:          uint8_t = 240
            pipelineCacheUUID[13]:          uint8_t = 81
            pipelineCacheUUID[14]:          uint8_t = 226
            pipelineCacheUUID[15]:          uint8_t = 196
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb038:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 1073741824
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 28
            maxVertexInputBindings:         uint32_t = 28
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 8
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb114
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1792
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb124
                maxComputeWorkGroupSize[0]:     uint32_t = 1792
                maxComputeWorkGroupSize[1]:     uint32_t = 1792
                maxComputeWorkGroupSize[2]:     uint32_t = 1792
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb150
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x7fff0cfdb158
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb1f4
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x7fff0cfdb1fc
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 2047.99
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb230:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf10:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb024
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb038:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb114
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb124
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb150
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfdb158
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb1f4
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfdb1fc
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb230:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf10:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb024
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb038:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb114
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb124
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb150
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfdb158
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb1f4
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfdb1fc
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb230:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pPhysicalDeviceCount:           uint32_t* = 2
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pPhysicalDeviceCount:           uint32_t* = 2
    pPhysicalDevices:               VkPhysicalDevice* = 0x1f34c70
        pPhysicalDevices[0]:            VkPhysicalDevice = 0x1dd8960
        pPhysicalDevices[1]:            VkPhysicalDevice = 0x1e682e0

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1dd8960
    pFeatures:                      VkPhysicalDeviceFeatures* = 0x1864400:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 0
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 1
        textureCompressionASTC_LDR:     VkBool32 = 1
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 0
        shaderStorageImageReadWithoutFormat: VkBool32 = 0
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 1
        shaderResourceResidency:        VkBool32 = 0
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 0
        sparseResidencyBuffer:          VkBool32 = 0
        sparseResidencyImage2D:         VkBool32 = 0
        sparseResidencyImage3D:         VkBool32 = 0
        sparseResidency2Samples:        VkBool32 = 0
        sparseResidency4Samples:        VkBool32 = 0
        sparseResidency8Samples:        VkBool32 = 0
        sparseResidency16Samples:       VkBool32 = 0
        sparseResidencyAliased:         VkBool32 = 0
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pFeatures:                      VkPhysicalDeviceFeatures* = 0x1f34a60:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 1
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 0
        textureCompressionASTC_LDR:     VkBool32 = 0
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 1
        shaderStorageImageReadWithoutFormat: VkBool32 = 1
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 1
        shaderResourceResidency:        VkBool32 = 1
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 1
        sparseResidencyBuffer:          VkBool32 = 1
        sparseResidencyImage2D:         VkBool32 = 1
        sparseResidencyImage3D:         VkBool32 = 1
        sparseResidency2Samples:        VkBool32 = 1
        sparseResidency4Samples:        VkBool32 = 1
        sparseResidency8Samples:        VkBool32 = 1
        sparseResidency16Samples:       VkBool32 = 1
        sparseResidencyAliased:         VkBool32 = 1
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1dd8960
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf30:
        apiVersion:                     uint32_t = 4202641
        driverVersion:                  uint32_t = 83894278
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 16027
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630 (CFL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb044
            pipelineCacheUUID[0]:           uint8_t = 39
            pipelineCacheUUID[1]:           uint8_t = 48
            pipelineCacheUUID[2]:           uint8_t = 120
            pipelineCacheUUID[3]:           uint8_t = 96
            pipelineCacheUUID[4]:           uint8_t = 187
            pipelineCacheUUID[5]:           uint8_t = 233
            pipelineCacheUUID[6]:           uint8_t = 118
            pipelineCacheUUID[7]:           uint8_t = 122
            pipelineCacheUUID[8]:           uint8_t = 114
            pipelineCacheUUID[9]:           uint8_t = 234
            pipelineCacheUUID[10]:          uint8_t = 63
            pipelineCacheUUID[11]:          uint8_t = 40
            pipelineCacheUUID[12]:          uint8_t = 240
            pipelineCacheUUID[13]:          uint8_t = 81
            pipelineCacheUUID[14]:          uint8_t = 226
            pipelineCacheUUID[15]:          uint8_t = 196
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb058:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 1073741824
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 28
            maxVertexInputBindings:         uint32_t = 28
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 8
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb134
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1792
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb144
                maxComputeWorkGroupSize[0]:     uint32_t = 1792
                maxComputeWorkGroupSize[1]:     uint32_t = 1792
                maxComputeWorkGroupSize[2]:     uint32_t = 1792
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb170
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x7fff0cfdb178
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb214
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x7fff0cfdb21c
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 2047.99
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb250:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf30:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb044
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb058:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb134
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb144
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb170
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfdb178
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb214
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfdb21c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb250:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pPhysicalDeviceCount:           uint32_t* = 2
    pPhysicalDevices:               VkPhysicalDevice* = NULL

Thread 0, Frame 0:
vkEnumeratePhysicalDevices(instance, pPhysicalDeviceCount, pPhysicalDevices) returns VkResult VK_SUCCESS (0):
    instance:                       VkInstance = 0x197d070
    pPhysicalDeviceCount:           uint32_t* = 2
    pPhysicalDevices:               VkPhysicalDevice* = 0x1f34cb0
        pPhysicalDevices[0]:            VkPhysicalDevice = 0x1dd8960
        pPhysicalDevices[1]:            VkPhysicalDevice = 0x1e682e0

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1dd8960
    pFeatures:                      VkPhysicalDeviceFeatures* = 0x1864400:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 0
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 1
        textureCompressionASTC_LDR:     VkBool32 = 1
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 0
        shaderStorageImageReadWithoutFormat: VkBool32 = 0
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 1
        shaderResourceResidency:        VkBool32 = 0
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 0
        sparseResidencyBuffer:          VkBool32 = 0
        sparseResidencyImage2D:         VkBool32 = 0
        sparseResidencyImage3D:         VkBool32 = 0
        sparseResidency2Samples:        VkBool32 = 0
        sparseResidency4Samples:        VkBool32 = 0
        sparseResidency8Samples:        VkBool32 = 0
        sparseResidency16Samples:       VkBool32 = 0
        sparseResidencyAliased:         VkBool32 = 0
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pFeatures:                      VkPhysicalDeviceFeatures* = 0x1f34a60:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 1
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 0
        textureCompressionASTC_LDR:     VkBool32 = 0
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 1
        shaderStorageImageReadWithoutFormat: VkBool32 = 1
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 1
        shaderResourceResidency:        VkBool32 = 1
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 1
        sparseResidencyBuffer:          VkBool32 = 1
        sparseResidencyImage2D:         VkBool32 = 1
        sparseResidencyImage3D:         VkBool32 = 1
        sparseResidency2Samples:        VkBool32 = 1
        sparseResidency4Samples:        VkBool32 = 1
        sparseResidency8Samples:        VkBool32 = 1
        sparseResidency16Samples:       VkBool32 = 1
        sparseResidencyAliased:         VkBool32 = 1
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1dd8960
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf10:
        apiVersion:                     uint32_t = 4202641
        driverVersion:                  uint32_t = 83894278
        vendorID:                       uint32_t = 32902
        deviceID:                       uint32_t = 16027
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU (1)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "Intel(R) UHD Graphics 630 (CFL GT2)"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb024
            pipelineCacheUUID[0]:           uint8_t = 39
            pipelineCacheUUID[1]:           uint8_t = 48
            pipelineCacheUUID[2]:           uint8_t = 120
            pipelineCacheUUID[3]:           uint8_t = 96
            pipelineCacheUUID[4]:           uint8_t = 187
            pipelineCacheUUID[5]:           uint8_t = 233
            pipelineCacheUUID[6]:           uint8_t = 118
            pipelineCacheUUID[7]:           uint8_t = 122
            pipelineCacheUUID[8]:           uint8_t = 114
            pipelineCacheUUID[9]:           uint8_t = 234
            pipelineCacheUUID[10]:          uint8_t = 63
            pipelineCacheUUID[11]:          uint8_t = 40
            pipelineCacheUUID[12]:          uint8_t = 240
            pipelineCacheUUID[13]:          uint8_t = 81
            pipelineCacheUUID[14]:          uint8_t = 226
            pipelineCacheUUID[15]:          uint8_t = 196
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb038:
            maxImageDimension1D:            uint32_t = 16384
            maxImageDimension2D:            uint32_t = 16384
            maxImageDimension3D:            uint32_t = 2048
            maxImageDimensionCube:          uint32_t = 16384
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 134217728
            maxStorageBufferRange:          uint32_t = 1073741824
            maxPushConstantsSize:           uint32_t = 128
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 65536
            bufferImageGranularity:         VkDeviceSize = 64
            sparseAddressSpaceSize:         VkDeviceSize = 0
            maxBoundDescriptorSets:         uint32_t = 8
            maxPerStageDescriptorSamplers:  uint32_t = 65535
            maxPerStageDescriptorUniformBuffers: uint32_t = 64
            maxPerStageDescriptorStorageBuffers: uint32_t = 65535
            maxPerStageDescriptorSampledImages: uint32_t = 65535
            maxPerStageDescriptorStorageImages: uint32_t = 65535
            maxPerStageDescriptorInputAttachments: uint32_t = 64
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 393210
            maxDescriptorSetUniformBuffers: uint32_t = 384
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 8
            maxDescriptorSetStorageBuffers: uint32_t = 393210
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 8
            maxDescriptorSetSampledImages:  uint32_t = 393210
            maxDescriptorSetStorageImages:  uint32_t = 393210
            maxDescriptorSetInputAttachments: uint32_t = 256
            maxVertexInputAttributes:       uint32_t = 28
            maxVertexInputBindings:         uint32_t = 28
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 128
            maxTessellationControlTotalOutputComponents: uint32_t = 2048
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 64
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 256
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 116
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 8
            maxComputeSharedMemorySize:     uint32_t = 65536
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb114
                maxComputeWorkGroupCount[0]:    uint32_t = 65535
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1792
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb124
                maxComputeWorkGroupSize[0]:     uint32_t = 1792
                maxComputeWorkGroupSize[1]:     uint32_t = 1792
                maxComputeWorkGroupSize[2]:     uint32_t = 1792
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 16
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb150
                maxViewportDimensions[0]:       uint32_t = 16384
                maxViewportDimensions[1]:       uint32_t = 16384
            viewportBoundsRange:            float[2] = 0x7fff0cfdb158
                viewportBoundsRange[0]:         float = -32768
                viewportBoundsRange[1]:         float = 32767
            viewportSubPixelBits:           uint32_t = 13
            minMemoryMapAlignment:          size_t = 4096
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 64
            minStorageBufferOffsetAlignment: VkDeviceSize = 4
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 16384
            maxFramebufferHeight:           uint32_t = 16384
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 1 (VK_SAMPLE_COUNT_1_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 83.3333
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb1f4
                pointSizeRange[0]:              float = 0.125
                pointSizeRange[1]:              float = 255.875
            lineWidthRange:                 float[2] = 0x7fff0cfdb1fc
                lineWidthRange[0]:              float = 0
                lineWidthRange[1]:              float = 2047.99
            pointSizeGranularity:           float = 0.125
            lineWidthGranularity:           float = 0.0078125
            strictLines:                    VkBool32 = 0
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 128
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 128
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb230:
            residencyStandard2DBlockShape:  VkBool32 = 0
            residencyStandard2DMultisampleBlockShape: VkBool32 = 0
            residencyStandard3DBlockShape:  VkBool32 = 0
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf10:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb024
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb038:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb114
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb124
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb150
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfdb158
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb1f4
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfdb1fc
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb230:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdaf10:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb024
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb038:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb114
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb124
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb150
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfdb158
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb1f4
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfdb1fc
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb230:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 0x1f2d5b0
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 0x1f2d5b0:
            queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 16
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x1f2d5bc:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties = 0x1f2d5c8:
            queueFlags:                     VkQueueFlags = 12 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 2
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x1f2d5d4:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[2]:      VkQueueFamilyProperties = 0x1f2d5e0:
            queueFlags:                     VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 8
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x1f2d5ec:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSupported:                     VkBool32* = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSurfaceCapabilities:           VkSurfaceCapabilitiesKHR* = 0x7fff0cfdb228:
        minImageCount:                  uint32_t = 2
        maxImageCount:                  uint32_t = 8
        currentExtent:                  VkExtent2D = 0x7fff0cfdb230:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        minImageExtent:                 VkExtent2D = 0x7fff0cfdb238:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        maxImageExtent:                 VkExtent2D = 0x7fff0cfdb240:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        maxImageArrayLayers:            uint32_t = 1
        supportedTransforms:            VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        currentTransform:               VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        supportedCompositeAlpha:        VkCompositeAlphaFlagsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        supportedUsageFlags:            VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSurfaceFormatCount:            uint32_t* = 2
    pSurfaceFormats:                VkSurfaceFormatKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSurfaceFormatCount:            uint32_t* = 2
    pSurfaceFormats:                VkSurfaceFormatKHR* = 0x1f34ef0
        pSurfaceFormats[0]:             VkSurfaceFormatKHR = 0x1f34ef0:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        pSurfaceFormats[1]:             VkSurfaceFormatKHR = 0x1f34ef8:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pPresentModeCount:              uint32_t* = 3
    pPresentModes:                  VkPresentModeKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pPresentModeCount:              uint32_t* = 3
    pPresentModes:                  VkPresentModeKHR* = 0x1f350d0
        pPresentModes[0]:               VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        pPresentModes[1]:               VkPresentModeKHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR (3)
        pPresentModes[2]:               VkPresentModeKHR = VK_PRESENT_MODE_IMMEDIATE_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceFeatures(physicalDevice, pFeatures) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pFeatures:                      VkPhysicalDeviceFeatures* = 0x7fff0cfdb228:
        robustBufferAccess:             VkBool32 = 1
        fullDrawIndexUint32:            VkBool32 = 1
        imageCubeArray:                 VkBool32 = 1
        independentBlend:               VkBool32 = 1
        geometryShader:                 VkBool32 = 1
        tessellationShader:             VkBool32 = 1
        sampleRateShading:              VkBool32 = 1
        dualSrcBlend:                   VkBool32 = 1
        logicOp:                        VkBool32 = 1
        multiDrawIndirect:              VkBool32 = 1
        drawIndirectFirstInstance:      VkBool32 = 1
        depthClamp:                     VkBool32 = 1
        depthBiasClamp:                 VkBool32 = 1
        fillModeNonSolid:               VkBool32 = 1
        depthBounds:                    VkBool32 = 1
        wideLines:                      VkBool32 = 1
        largePoints:                    VkBool32 = 1
        alphaToOne:                     VkBool32 = 1
        multiViewport:                  VkBool32 = 1
        samplerAnisotropy:              VkBool32 = 1
        textureCompressionETC2:         VkBool32 = 0
        textureCompressionASTC_LDR:     VkBool32 = 0
        textureCompressionBC:           VkBool32 = 1
        occlusionQueryPrecise:          VkBool32 = 1
        pipelineStatisticsQuery:        VkBool32 = 1
        vertexPipelineStoresAndAtomics: VkBool32 = 1
        fragmentStoresAndAtomics:       VkBool32 = 1
        shaderTessellationAndGeometryPointSize: VkBool32 = 1
        shaderImageGatherExtended:      VkBool32 = 1
        shaderStorageImageExtendedFormats: VkBool32 = 1
        shaderStorageImageMultisample:  VkBool32 = 1
        shaderStorageImageReadWithoutFormat: VkBool32 = 1
        shaderStorageImageWriteWithoutFormat: VkBool32 = 1
        shaderUniformBufferArrayDynamicIndexing: VkBool32 = 1
        shaderSampledImageArrayDynamicIndexing: VkBool32 = 1
        shaderStorageBufferArrayDynamicIndexing: VkBool32 = 1
        shaderStorageImageArrayDynamicIndexing: VkBool32 = 1
        shaderClipDistance:             VkBool32 = 1
        shaderCullDistance:             VkBool32 = 1
        shaderFloat64:                  VkBool32 = 1
        shaderInt64:                    VkBool32 = 1
        shaderInt16:                    VkBool32 = 1
        shaderResourceResidency:        VkBool32 = 1
        shaderResourceMinLod:           VkBool32 = 1
        sparseBinding:                  VkBool32 = 1
        sparseResidencyBuffer:          VkBool32 = 1
        sparseResidencyImage2D:         VkBool32 = 1
        sparseResidencyImage3D:         VkBool32 = 1
        sparseResidency2Samples:        VkBool32 = 1
        sparseResidency4Samples:        VkBool32 = 1
        sparseResidency8Samples:        VkBool32 = 1
        sparseResidency16Samples:       VkBool32 = 1
        sparseResidencyAliased:         VkBool32 = 1
        variableMultisampleRate:        VkBool32 = 1
        inheritedQueries:               VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 0x1f2d5b0
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 0x1f2d5b0:
            queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 16
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x1f2d5bc:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties = 0x1f2d5c8:
            queueFlags:                     VkQueueFlags = 12 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 2
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x1f2d5d4:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[2]:      VkQueueFamilyProperties = 0x1f2d5e0:
            queueFlags:                     VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 8
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x1f2d5ec:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSupported:                     VkBool32* = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdab30:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdac44
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdac58:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdad34
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdad44
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdad70
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfdad78
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdae14
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfdae1c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdae50:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkCreateDevice(physicalDevice, pCreateInfo, pAllocator, pDevice) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pCreateInfo:                    const VkDeviceCreateInfo* = 0x7fff0cfda9b0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO (3)
        pNext:                          const void* = NULL
        flags:                          VkDeviceCreateFlags = 0
        queueCreateInfoCount:           uint32_t = 1
        pQueueCreateInfos:              const VkDeviceQueueCreateInfo* = 0x1f36478
            pQueueCreateInfos[0]:           const VkDeviceQueueCreateInfo = 0x1f36478:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO (2)
                pNext:                          const void* = NULL
                flags:                          VkDeviceQueueCreateFlags = 0
                queueFamilyIndex:               uint32_t = 0
                queueCount:                     uint32_t = 1
                pQueuePriorities:               const float* = 0x1fff850
                    pQueuePriorities[0]:            const float = 1
        enabledLayerCount:              uint32_t = 2
        ppEnabledLayerNames:            const char* const* = 0x1fff700
            ppEnabledLayerNames[0]:         const char* const = "VK_LAYER_KHRONOS_validation"
            ppEnabledLayerNames[1]:         const char* const = "VK_LAYER_LUNARG_api_dump"
        enabledExtensionCount:          uint32_t = 1
        ppEnabledExtensionNames:        const char* const* = 0x1fff770
            ppEnabledExtensionNames[0]:     const char* const = "VK_KHR_swapchain"
        pEnabledFeatures:               const VkPhysicalDeviceFeatures* = 0x1e68af0:
            robustBufferAccess:             VkBool32 = 0
            fullDrawIndexUint32:            VkBool32 = 0
            imageCubeArray:                 VkBool32 = 0
            independentBlend:               VkBool32 = 0
            geometryShader:                 VkBool32 = 0
            tessellationShader:             VkBool32 = 0
            sampleRateShading:              VkBool32 = 0
            dualSrcBlend:                   VkBool32 = 0
            logicOp:                        VkBool32 = 0
            multiDrawIndirect:              VkBool32 = 0
            drawIndirectFirstInstance:      VkBool32 = 0
            depthClamp:                     VkBool32 = 0
            depthBiasClamp:                 VkBool32 = 0
            fillModeNonSolid:               VkBool32 = 0
            depthBounds:                    VkBool32 = 0
            wideLines:                      VkBool32 = 0
            largePoints:                    VkBool32 = 0
            alphaToOne:                     VkBool32 = 0
            multiViewport:                  VkBool32 = 0
            samplerAnisotropy:              VkBool32 = 1
            textureCompressionETC2:         VkBool32 = 0
            textureCompressionASTC_LDR:     VkBool32 = 0
            textureCompressionBC:           VkBool32 = 0
            occlusionQueryPrecise:          VkBool32 = 0
            pipelineStatisticsQuery:        VkBool32 = 0
            vertexPipelineStoresAndAtomics: VkBool32 = 0
            fragmentStoresAndAtomics:       VkBool32 = 0
            shaderTessellationAndGeometryPointSize: VkBool32 = 0
            shaderImageGatherExtended:      VkBool32 = 0
            shaderStorageImageExtendedFormats: VkBool32 = 0
            shaderStorageImageMultisample:  VkBool32 = 0
            shaderStorageImageReadWithoutFormat: VkBool32 = 0
            shaderStorageImageWriteWithoutFormat: VkBool32 = 0
            shaderUniformBufferArrayDynamicIndexing: VkBool32 = 0
            shaderSampledImageArrayDynamicIndexing: VkBool32 = 0
            shaderStorageBufferArrayDynamicIndexing: VkBool32 = 0
            shaderStorageImageArrayDynamicIndexing: VkBool32 = 0
            shaderClipDistance:             VkBool32 = 0
            shaderCullDistance:             VkBool32 = 0
            shaderFloat64:                  VkBool32 = 0
            shaderInt64:                    VkBool32 = 0
            shaderInt16:                    VkBool32 = 0
            shaderResourceResidency:        VkBool32 = 0
            shaderResourceMinLod:           VkBool32 = 0
            sparseBinding:                  VkBool32 = 0
            sparseResidencyBuffer:          VkBool32 = 0
            sparseResidencyImage2D:         VkBool32 = 0
            sparseResidencyImage3D:         VkBool32 = 0
            sparseResidency2Samples:        VkBool32 = 0
            sparseResidency4Samples:        VkBool32 = 0
            sparseResidency8Samples:        VkBool32 = 0
            sparseResidency16Samples:       VkBool32 = 0
            sparseResidencyAliased:         VkBool32 = 0
            variableMultisampleRate:        VkBool32 = 0
            inheritedQueries:               VkBool32 = 0
        pNext:                          const void* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pDevice:                        VkDevice* = 0x200f6d8

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfda260:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfda374
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfda388:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfda464
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfda474
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfda4a0
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfda4a8
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfda544
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfda54c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfda580:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 0x1f2d3f0
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 0x1f2d3f0:
            queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 16
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x1f2d3fc:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties = 0x1f2d408:
            queueFlags:                     VkQueueFlags = 12 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 2
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x1f2d414:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[2]:      VkQueueFamilyProperties = 0x1f2d420:
            queueFlags:                     VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 8
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x1f2d42c:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x200ce00:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x200ce04
            memoryTypes[0]:                 VkMemoryType = 0x200ce04:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x200ce0c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x200ce14:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x200ce1c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x200ce24:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x200ce2c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x200ce34:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x200ce3c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x200ce44:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x200ce4c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x200ce54:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x200cf08
            memoryHeaps[0]:                 VkMemoryHeap = 0x200cf08:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x200cf18:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x200cf28:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x200d008:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x200d11c
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x200d130:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x200d20c
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x200d21c
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x200d248
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x200d250
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x200d2ec
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x200d2f4
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x200d328:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties2* = 0x7fff0cfda580:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:                          const void* = VkPhysicalDeviceVulkan11Properties
        properties:                     VkPhysicalDeviceProperties = 0x7fff0cfda590:
            apiVersion:                     uint32_t = 4202651
            driverVersion:                  uint32_t = 1930870976
            vendorID:                       uint32_t = 4318
            deviceID:                       uint32_t = 7200
            deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
            pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfda6a4
                pipelineCacheUUID[0]:           uint8_t = 31
                pipelineCacheUUID[1]:           uint8_t = 70
                pipelineCacheUUID[2]:           uint8_t = 121
                pipelineCacheUUID[3]:           uint8_t = 230
                pipelineCacheUUID[4]:           uint8_t = 160
                pipelineCacheUUID[5]:           uint8_t = 39
                pipelineCacheUUID[6]:           uint8_t = 9
                pipelineCacheUUID[7]:           uint8_t = 70
                pipelineCacheUUID[8]:           uint8_t = 127
                pipelineCacheUUID[9]:           uint8_t = 182
                pipelineCacheUUID[10]:          uint8_t = 114
                pipelineCacheUUID[11]:          uint8_t = 78
                pipelineCacheUUID[12]:          uint8_t = 168
                pipelineCacheUUID[13]:          uint8_t = 85
                pipelineCacheUUID[14]:          uint8_t = 44
                pipelineCacheUUID[15]:          uint8_t = 175
            limits:                         VkPhysicalDeviceLimits = 0x7fff0cfda6b8:
                maxImageDimension1D:            uint32_t = 32768
                maxImageDimension2D:            uint32_t = 32768
                maxImageDimension3D:            uint32_t = 16384
                maxImageDimensionCube:          uint32_t = 32768
                maxImageArrayLayers:            uint32_t = 2048
                maxTexelBufferElements:         uint32_t = 134217728
                maxUniformBufferRange:          uint32_t = 65536
                maxStorageBufferRange:          uint32_t = 4294967295
                maxPushConstantsSize:           uint32_t = 256
                maxMemoryAllocationCount:       uint32_t = 4294967295
                maxSamplerAllocationCount:      uint32_t = 4000
                bufferImageGranularity:         VkDeviceSize = 1024
                sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
                maxBoundDescriptorSets:         uint32_t = 32
                maxPerStageDescriptorSamplers:  uint32_t = 1048576
                maxPerStageDescriptorUniformBuffers: uint32_t = 15
                maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
                maxPerStageDescriptorSampledImages: uint32_t = 1048576
                maxPerStageDescriptorStorageImages: uint32_t = 1048576
                maxPerStageDescriptorInputAttachments: uint32_t = 1048576
                maxPerStageResources:           uint32_t = 4294967295
                maxDescriptorSetSamplers:       uint32_t = 1048576
                maxDescriptorSetUniformBuffers: uint32_t = 180
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
                maxDescriptorSetStorageBuffers: uint32_t = 1048576
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
                maxDescriptorSetSampledImages:  uint32_t = 1048576
                maxDescriptorSetStorageImages:  uint32_t = 1048576
                maxDescriptorSetInputAttachments: uint32_t = 1048576
                maxVertexInputAttributes:       uint32_t = 32
                maxVertexInputBindings:         uint32_t = 32
                maxVertexInputAttributeOffset:  uint32_t = 2047
                maxVertexInputBindingStride:    uint32_t = 2048
                maxVertexOutputComponents:      uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize:       uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4216
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations:   uint32_t = 32
                maxGeometryInputComponents:     uint32_t = 128
                maxGeometryOutputComponents:    uint32_t = 128
                maxGeometryOutputVertices:      uint32_t = 1024
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents:     uint32_t = 128
                maxFragmentOutputAttachments:   uint32_t = 8
                maxFragmentDualSrcAttachments:  uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 16
                maxComputeSharedMemorySize:     uint32_t = 49152
                maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfda794
                    maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                    maxComputeWorkGroupCount[1]:    uint32_t = 65535
                    maxComputeWorkGroupCount[2]:    uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1536
                maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfda7a4
                    maxComputeWorkGroupSize[0]:     uint32_t = 1536
                    maxComputeWorkGroupSize[1]:     uint32_t = 1024
                    maxComputeWorkGroupSize[2]:     uint32_t = 64
                subPixelPrecisionBits:          uint32_t = 8
                subTexelPrecisionBits:          uint32_t = 8
                mipmapPrecisionBits:            uint32_t = 8
                maxDrawIndexedIndexValue:       uint32_t = 4294967295
                maxDrawIndirectCount:           uint32_t = 4294967295
                maxSamplerLodBias:              float = 15
                maxSamplerAnisotropy:           float = 16
                maxViewports:                   uint32_t = 16
                maxViewportDimensions:          uint32_t[2] = 0x7fff0cfda7d0
                    maxViewportDimensions[0]:       uint32_t = 32768
                    maxViewportDimensions[1]:       uint32_t = 32768
                viewportBoundsRange:            float[2] = 0x7fff0cfda7d8
                    viewportBoundsRange[0]:         float = -65536
                    viewportBoundsRange[1]:         float = 65536
                viewportSubPixelBits:           uint32_t = 8
                minMemoryMapAlignment:          size_t = 64
                minTexelBufferOffsetAlignment:  VkDeviceSize = 16
                minUniformBufferOffsetAlignment: VkDeviceSize = 256
                minStorageBufferOffsetAlignment: VkDeviceSize = 16
                minTexelOffset:                 int32_t = -8
                maxTexelOffset:                 uint32_t = 7
                minTexelGatherOffset:           int32_t = -32
                maxTexelGatherOffset:           uint32_t = 31
                minInterpolationOffset:         float = -0.5
                maxInterpolationOffset:         float = 0.4375
                subPixelInterpolationOffsetBits: uint32_t = 4
                maxFramebufferWidth:            uint32_t = 32768
                maxFramebufferHeight:           uint32_t = 32768
                maxFramebufferLayers:           uint32_t = 2048
                framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                maxColorAttachments:            uint32_t = 8
                sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:             uint32_t = 1
                timestampComputeAndGraphics:    VkBool32 = 1
                timestampPeriod:                float = 1
                maxClipDistances:               uint32_t = 8
                maxCullDistances:               uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities:        uint32_t = 2
                pointSizeRange:                 float[2] = 0x7fff0cfda874
                    pointSizeRange[0]:              float = 1
                    pointSizeRange[1]:              float = 2047.94
                lineWidthRange:                 float[2] = 0x7fff0cfda87c
                    lineWidthRange[0]:              float = 1
                    lineWidthRange[1]:              float = 64
                pointSizeGranularity:           float = 0.0625
                lineWidthGranularity:           float = 0.0625
                strictLines:                    VkBool32 = 1
                standardSampleLocations:        VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize:            VkDeviceSize = 64
            sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfda8b0:
                residencyStandard2DBlockShape:  VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 1
                residencyStandard3DBlockShape:  VkBool32 = 1
                residencyAlignedMipSize:        VkBool32 = 0
                residencyNonResidentStrict:     VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan11Properties = 0x200d340:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES (50)
            pNext:                          void* = NULL
            deviceUUID:                     uint8_t[VK_UUID_SIZE] = 0x200d350
                deviceUUID[0]:                  uint8_t = 135
                deviceUUID[1]:                  uint8_t = 224
                deviceUUID[2]:                  uint8_t = 231
                deviceUUID[3]:                  uint8_t = 194
                deviceUUID[4]:                  uint8_t = 28
                deviceUUID[5]:                  uint8_t = 14
                deviceUUID[6]:                  uint8_t = 29
                deviceUUID[7]:                  uint8_t = 98
                deviceUUID[8]:                  uint8_t = 24
                deviceUUID[9]:                  uint8_t = 162
                deviceUUID[10]:                 uint8_t = 249
                deviceUUID[11]:                 uint8_t = 66
                deviceUUID[12]:                 uint8_t = 49
                deviceUUID[13]:                 uint8_t = 229
                deviceUUID[14]:                 uint8_t = 251
                deviceUUID[15]:                 uint8_t = 238
            driverUUID:                     uint8_t[VK_UUID_SIZE] = 0x200d360
                driverUUID[0]:                  uint8_t = 127
                driverUUID[1]:                  uint8_t = 182
                driverUUID[2]:                  uint8_t = 114
                driverUUID[3]:                  uint8_t = 78
                driverUUID[4]:                  uint8_t = 168
                driverUUID[5]:                  uint8_t = 85
                driverUUID[6]:                  uint8_t = 44
                driverUUID[7]:                  uint8_t = 175
                driverUUID[8]:                  uint8_t = 246
                driverUUID[9]:                  uint8_t = 240
                driverUUID[10]:                 uint8_t = 100
                driverUUID[11]:                 uint8_t = 16
                driverUUID[12]:                 uint8_t = 21
                driverUUID[13]:                 uint8_t = 45
                driverUUID[14]:                 uint8_t = 84
                driverUUID[15]:                 uint8_t = 105
            deviceLUID:                     uint8_t[VK_LUID_SIZE] = 0x200d370
                deviceLUID[0]:                  uint8_t = 0
                deviceLUID[1]:                  uint8_t = 0
                deviceLUID[2]:                  uint8_t = 0
                deviceLUID[3]:                  uint8_t = 0
                deviceLUID[4]:                  uint8_t = 0
                deviceLUID[5]:                  uint8_t = 0
                deviceLUID[6]:                  uint8_t = 0
                deviceLUID[7]:                  uint8_t = 0
            deviceNodeMask:                 uint32_t = 1
            deviceLUIDValid:                VkBool32 = 0
            subgroupSize:                   uint32_t = 32
            subgroupSupportedStages:        VkShaderStageFlags = 16191 (VK_SHADER_STAGE_VERTEX_BIT | VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT | VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT | VK_SHADER_STAGE_GEOMETRY_BIT | VK_SHADER_STAGE_FRAGMENT_BIT | VK_SHADER_STAGE_COMPUTE_BIT | VK_SHADER_STAGE_RAYGEN_BIT_KHR | VK_SHADER_STAGE_ANY_HIT_BIT_KHR | VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR | VK_SHADER_STAGE_MISS_BIT_KHR | VK_SHADER_STAGE_INTERSECTION_BIT_KHR | VK_SHADER_STAGE_CALLABLE_BIT_KHR)
            subgroupSupportedOperations:    VkSubgroupFeatureFlags = 511 (VK_SUBGROUP_FEATURE_BASIC_BIT | VK_SUBGROUP_FEATURE_VOTE_BIT | VK_SUBGROUP_FEATURE_ARITHMETIC_BIT | VK_SUBGROUP_FEATURE_BALLOT_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_BIT | VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT | VK_SUBGROUP_FEATURE_CLUSTERED_BIT | VK_SUBGROUP_FEATURE_QUAD_BIT | VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV)
            subgroupQuadOperationsInAllStages: VkBool32 = 1
            pointClippingBehavior:          VkPointClippingBehavior = VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY (1)
            maxMultiviewViewCount:          uint32_t = 32
            maxMultiviewInstanceIndex:      uint32_t = 134217727
            protectedNoFault:               VkBool32 = 0
            maxPerSetDescriptors:           uint32_t = 4294967295
            maxMemoryAllocationSize:        VkDeviceSize = 4292870144

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties2* = 0x7fff0cfda580:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:                          const void* = VkPhysicalDeviceVulkan12Properties
        properties:                     VkPhysicalDeviceProperties = 0x7fff0cfda590:
            apiVersion:                     uint32_t = 4202651
            driverVersion:                  uint32_t = 1930870976
            vendorID:                       uint32_t = 4318
            deviceID:                       uint32_t = 7200
            deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
            pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfda6a4
                pipelineCacheUUID[0]:           uint8_t = 31
                pipelineCacheUUID[1]:           uint8_t = 70
                pipelineCacheUUID[2]:           uint8_t = 121
                pipelineCacheUUID[3]:           uint8_t = 230
                pipelineCacheUUID[4]:           uint8_t = 160
                pipelineCacheUUID[5]:           uint8_t = 39
                pipelineCacheUUID[6]:           uint8_t = 9
                pipelineCacheUUID[7]:           uint8_t = 70
                pipelineCacheUUID[8]:           uint8_t = 127
                pipelineCacheUUID[9]:           uint8_t = 182
                pipelineCacheUUID[10]:          uint8_t = 114
                pipelineCacheUUID[11]:          uint8_t = 78
                pipelineCacheUUID[12]:          uint8_t = 168
                pipelineCacheUUID[13]:          uint8_t = 85
                pipelineCacheUUID[14]:          uint8_t = 44
                pipelineCacheUUID[15]:          uint8_t = 175
            limits:                         VkPhysicalDeviceLimits = 0x7fff0cfda6b8:
                maxImageDimension1D:            uint32_t = 32768
                maxImageDimension2D:            uint32_t = 32768
                maxImageDimension3D:            uint32_t = 16384
                maxImageDimensionCube:          uint32_t = 32768
                maxImageArrayLayers:            uint32_t = 2048
                maxTexelBufferElements:         uint32_t = 134217728
                maxUniformBufferRange:          uint32_t = 65536
                maxStorageBufferRange:          uint32_t = 4294967295
                maxPushConstantsSize:           uint32_t = 256
                maxMemoryAllocationCount:       uint32_t = 4294967295
                maxSamplerAllocationCount:      uint32_t = 4000
                bufferImageGranularity:         VkDeviceSize = 1024
                sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
                maxBoundDescriptorSets:         uint32_t = 32
                maxPerStageDescriptorSamplers:  uint32_t = 1048576
                maxPerStageDescriptorUniformBuffers: uint32_t = 15
                maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
                maxPerStageDescriptorSampledImages: uint32_t = 1048576
                maxPerStageDescriptorStorageImages: uint32_t = 1048576
                maxPerStageDescriptorInputAttachments: uint32_t = 1048576
                maxPerStageResources:           uint32_t = 4294967295
                maxDescriptorSetSamplers:       uint32_t = 1048576
                maxDescriptorSetUniformBuffers: uint32_t = 180
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
                maxDescriptorSetStorageBuffers: uint32_t = 1048576
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
                maxDescriptorSetSampledImages:  uint32_t = 1048576
                maxDescriptorSetStorageImages:  uint32_t = 1048576
                maxDescriptorSetInputAttachments: uint32_t = 1048576
                maxVertexInputAttributes:       uint32_t = 32
                maxVertexInputBindings:         uint32_t = 32
                maxVertexInputAttributeOffset:  uint32_t = 2047
                maxVertexInputBindingStride:    uint32_t = 2048
                maxVertexOutputComponents:      uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize:       uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4216
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations:   uint32_t = 32
                maxGeometryInputComponents:     uint32_t = 128
                maxGeometryOutputComponents:    uint32_t = 128
                maxGeometryOutputVertices:      uint32_t = 1024
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents:     uint32_t = 128
                maxFragmentOutputAttachments:   uint32_t = 8
                maxFragmentDualSrcAttachments:  uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 16
                maxComputeSharedMemorySize:     uint32_t = 49152
                maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfda794
                    maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                    maxComputeWorkGroupCount[1]:    uint32_t = 65535
                    maxComputeWorkGroupCount[2]:    uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1536
                maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfda7a4
                    maxComputeWorkGroupSize[0]:     uint32_t = 1536
                    maxComputeWorkGroupSize[1]:     uint32_t = 1024
                    maxComputeWorkGroupSize[2]:     uint32_t = 64
                subPixelPrecisionBits:          uint32_t = 8
                subTexelPrecisionBits:          uint32_t = 8
                mipmapPrecisionBits:            uint32_t = 8
                maxDrawIndexedIndexValue:       uint32_t = 4294967295
                maxDrawIndirectCount:           uint32_t = 4294967295
                maxSamplerLodBias:              float = 15
                maxSamplerAnisotropy:           float = 16
                maxViewports:                   uint32_t = 16
                maxViewportDimensions:          uint32_t[2] = 0x7fff0cfda7d0
                    maxViewportDimensions[0]:       uint32_t = 32768
                    maxViewportDimensions[1]:       uint32_t = 32768
                viewportBoundsRange:            float[2] = 0x7fff0cfda7d8
                    viewportBoundsRange[0]:         float = -65536
                    viewportBoundsRange[1]:         float = 65536
                viewportSubPixelBits:           uint32_t = 8
                minMemoryMapAlignment:          size_t = 64
                minTexelBufferOffsetAlignment:  VkDeviceSize = 16
                minUniformBufferOffsetAlignment: VkDeviceSize = 256
                minStorageBufferOffsetAlignment: VkDeviceSize = 16
                minTexelOffset:                 int32_t = -8
                maxTexelOffset:                 uint32_t = 7
                minTexelGatherOffset:           int32_t = -32
                maxTexelGatherOffset:           uint32_t = 31
                minInterpolationOffset:         float = -0.5
                maxInterpolationOffset:         float = 0.4375
                subPixelInterpolationOffsetBits: uint32_t = 4
                maxFramebufferWidth:            uint32_t = 32768
                maxFramebufferHeight:           uint32_t = 32768
                maxFramebufferLayers:           uint32_t = 2048
                framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                maxColorAttachments:            uint32_t = 8
                sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:             uint32_t = 1
                timestampComputeAndGraphics:    VkBool32 = 1
                timestampPeriod:                float = 1
                maxClipDistances:               uint32_t = 8
                maxCullDistances:               uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities:        uint32_t = 2
                pointSizeRange:                 float[2] = 0x7fff0cfda874
                    pointSizeRange[0]:              float = 1
                    pointSizeRange[1]:              float = 2047.94
                lineWidthRange:                 float[2] = 0x7fff0cfda87c
                    lineWidthRange[0]:              float = 1
                    lineWidthRange[1]:              float = 64
                pointSizeGranularity:           float = 0.0625
                lineWidthGranularity:           float = 0.0625
                strictLines:                    VkBool32 = 1
                standardSampleLocations:        VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize:            VkDeviceSize = 64
            sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfda8b0:
                residencyStandard2DBlockShape:  VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 1
                residencyStandard3DBlockShape:  VkBool32 = 1
                residencyAlignedMipSize:        VkBool32 = 0
                residencyNonResidentStrict:     VkBool32 = 1
        pNext:                          VkPhysicalDeviceVulkan12Properties = 0x200d3b0:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES (52)
            pNext:                          void* = NULL
            driverID:                       VkDriverId = VK_DRIVER_ID_NVIDIA_PROPRIETARY (4)
            driverName:                     char[VK_MAX_DRIVER_NAME_SIZE] = "NVIDIA"
            driverInfo:                     char[VK_MAX_DRIVER_INFO_SIZE] = "460.91.03"
            conformanceVersion:             VkConformanceVersion = 0x200d5c4:
                major:                          uint8_t = 1
                minor:                          uint8_t = 2
                subminor:                       uint8_t = 4
                patch:                          uint8_t = 0
            denormBehaviorIndependence:     VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL (1)
            roundingModeIndependence:       VkShaderFloatControlsIndependence = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL (1)
            shaderSignedZeroInfNanPreserveFloat16: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat32: VkBool32 = 1
            shaderSignedZeroInfNanPreserveFloat64: VkBool32 = 1
            shaderDenormPreserveFloat16:    VkBool32 = 1
            shaderDenormPreserveFloat32:    VkBool32 = 0
            shaderDenormPreserveFloat64:    VkBool32 = 0
            shaderDenormFlushToZeroFloat16: VkBool32 = 0
            shaderDenormFlushToZeroFloat32: VkBool32 = 0
            shaderDenormFlushToZeroFloat64: VkBool32 = 0
            shaderRoundingModeRTEFloat16:   VkBool32 = 1
            shaderRoundingModeRTEFloat32:   VkBool32 = 1
            shaderRoundingModeRTEFloat64:   VkBool32 = 1
            shaderRoundingModeRTZFloat16:   VkBool32 = 0
            shaderRoundingModeRTZFloat32:   VkBool32 = 1
            shaderRoundingModeRTZFloat64:   VkBool32 = 1
            maxUpdateAfterBindDescriptorsInAllPools: uint32_t = 4294967295
            shaderUniformBufferArrayNonUniformIndexingNative: VkBool32 = 1
            shaderSampledImageArrayNonUniformIndexingNative: VkBool32 = 1
            shaderStorageBufferArrayNonUniformIndexingNative: VkBool32 = 1
            shaderStorageImageArrayNonUniformIndexingNative: VkBool32 = 1
            shaderInputAttachmentArrayNonUniformIndexingNative: VkBool32 = 1
            robustBufferAccessUpdateAfterBind: VkBool32 = 1
            quadDivergentImplicitLod:       VkBool32 = 1
            maxPerStageDescriptorUpdateAfterBindSamplers: uint32_t = 1048576
            maxPerStageDescriptorUpdateAfterBindUniformBuffers: uint32_t = 15
            maxPerStageDescriptorUpdateAfterBindStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorUpdateAfterBindSampledImages: uint32_t = 1048576
            maxPerStageDescriptorUpdateAfterBindStorageImages: uint32_t = 1048576
            maxPerStageDescriptorUpdateAfterBindInputAttachments: uint32_t = 1048576
            maxPerStageUpdateAfterBindResources: uint32_t = 4294967295
            maxDescriptorSetUpdateAfterBindSamplers: uint32_t = 1048576
            maxDescriptorSetUpdateAfterBindUniformBuffers: uint32_t = 180
            maxDescriptorSetUpdateAfterBindUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetUpdateAfterBindStorageBuffers: uint32_t = 1048576
            maxDescriptorSetUpdateAfterBindStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetUpdateAfterBindSampledImages: uint32_t = 1048576
            maxDescriptorSetUpdateAfterBindStorageImages: uint32_t = 1048576
            maxDescriptorSetUpdateAfterBindInputAttachments: uint32_t = 1048576
            supportedDepthResolveModes:     VkResolveModeFlags = 15 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_AVERAGE_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            supportedStencilResolveModes:   VkResolveModeFlags = 13 (VK_RESOLVE_MODE_SAMPLE_ZERO_BIT | VK_RESOLVE_MODE_MIN_BIT | VK_RESOLVE_MODE_MAX_BIT)
            independentResolveNone:         VkBool32 = 1
            independentResolve:             VkBool32 = 1
            filterMinmaxSingleComponentFormats: VkBool32 = 1
            filterMinmaxImageComponentMapping: VkBool32 = 1
            maxTimelineSemaphoreValueDifference: uint64_t = 2147483647
            framebufferIntegerColorSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties2(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties2* = 0x7fff0cfda580:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2 (1000059001)
        pNext:                          const void* = VkPhysicalDeviceMultiviewProperties
        properties:                     VkPhysicalDeviceProperties = 0x7fff0cfda590:
            apiVersion:                     uint32_t = 4202651
            driverVersion:                  uint32_t = 1930870976
            vendorID:                       uint32_t = 4318
            deviceID:                       uint32_t = 7200
            deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
            deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
            pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfda6a4
                pipelineCacheUUID[0]:           uint8_t = 31
                pipelineCacheUUID[1]:           uint8_t = 70
                pipelineCacheUUID[2]:           uint8_t = 121
                pipelineCacheUUID[3]:           uint8_t = 230
                pipelineCacheUUID[4]:           uint8_t = 160
                pipelineCacheUUID[5]:           uint8_t = 39
                pipelineCacheUUID[6]:           uint8_t = 9
                pipelineCacheUUID[7]:           uint8_t = 70
                pipelineCacheUUID[8]:           uint8_t = 127
                pipelineCacheUUID[9]:           uint8_t = 182
                pipelineCacheUUID[10]:          uint8_t = 114
                pipelineCacheUUID[11]:          uint8_t = 78
                pipelineCacheUUID[12]:          uint8_t = 168
                pipelineCacheUUID[13]:          uint8_t = 85
                pipelineCacheUUID[14]:          uint8_t = 44
                pipelineCacheUUID[15]:          uint8_t = 175
            limits:                         VkPhysicalDeviceLimits = 0x7fff0cfda6b8:
                maxImageDimension1D:            uint32_t = 32768
                maxImageDimension2D:            uint32_t = 32768
                maxImageDimension3D:            uint32_t = 16384
                maxImageDimensionCube:          uint32_t = 32768
                maxImageArrayLayers:            uint32_t = 2048
                maxTexelBufferElements:         uint32_t = 134217728
                maxUniformBufferRange:          uint32_t = 65536
                maxStorageBufferRange:          uint32_t = 4294967295
                maxPushConstantsSize:           uint32_t = 256
                maxMemoryAllocationCount:       uint32_t = 4294967295
                maxSamplerAllocationCount:      uint32_t = 4000
                bufferImageGranularity:         VkDeviceSize = 1024
                sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
                maxBoundDescriptorSets:         uint32_t = 32
                maxPerStageDescriptorSamplers:  uint32_t = 1048576
                maxPerStageDescriptorUniformBuffers: uint32_t = 15
                maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
                maxPerStageDescriptorSampledImages: uint32_t = 1048576
                maxPerStageDescriptorStorageImages: uint32_t = 1048576
                maxPerStageDescriptorInputAttachments: uint32_t = 1048576
                maxPerStageResources:           uint32_t = 4294967295
                maxDescriptorSetSamplers:       uint32_t = 1048576
                maxDescriptorSetUniformBuffers: uint32_t = 180
                maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
                maxDescriptorSetStorageBuffers: uint32_t = 1048576
                maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
                maxDescriptorSetSampledImages:  uint32_t = 1048576
                maxDescriptorSetStorageImages:  uint32_t = 1048576
                maxDescriptorSetInputAttachments: uint32_t = 1048576
                maxVertexInputAttributes:       uint32_t = 32
                maxVertexInputBindings:         uint32_t = 32
                maxVertexInputAttributeOffset:  uint32_t = 2047
                maxVertexInputBindingStride:    uint32_t = 2048
                maxVertexOutputComponents:      uint32_t = 128
                maxTessellationGenerationLevel: uint32_t = 64
                maxTessellationPatchSize:       uint32_t = 32
                maxTessellationControlPerVertexInputComponents: uint32_t = 128
                maxTessellationControlPerVertexOutputComponents: uint32_t = 128
                maxTessellationControlPerPatchOutputComponents: uint32_t = 120
                maxTessellationControlTotalOutputComponents: uint32_t = 4216
                maxTessellationEvaluationInputComponents: uint32_t = 128
                maxTessellationEvaluationOutputComponents: uint32_t = 128
                maxGeometryShaderInvocations:   uint32_t = 32
                maxGeometryInputComponents:     uint32_t = 128
                maxGeometryOutputComponents:    uint32_t = 128
                maxGeometryOutputVertices:      uint32_t = 1024
                maxGeometryTotalOutputComponents: uint32_t = 1024
                maxFragmentInputComponents:     uint32_t = 128
                maxFragmentOutputAttachments:   uint32_t = 8
                maxFragmentDualSrcAttachments:  uint32_t = 1
                maxFragmentCombinedOutputResources: uint32_t = 16
                maxComputeSharedMemorySize:     uint32_t = 49152
                maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfda794
                    maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                    maxComputeWorkGroupCount[1]:    uint32_t = 65535
                    maxComputeWorkGroupCount[2]:    uint32_t = 65535
                maxComputeWorkGroupInvocations: uint32_t = 1536
                maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfda7a4
                    maxComputeWorkGroupSize[0]:     uint32_t = 1536
                    maxComputeWorkGroupSize[1]:     uint32_t = 1024
                    maxComputeWorkGroupSize[2]:     uint32_t = 64
                subPixelPrecisionBits:          uint32_t = 8
                subTexelPrecisionBits:          uint32_t = 8
                mipmapPrecisionBits:            uint32_t = 8
                maxDrawIndexedIndexValue:       uint32_t = 4294967295
                maxDrawIndirectCount:           uint32_t = 4294967295
                maxSamplerLodBias:              float = 15
                maxSamplerAnisotropy:           float = 16
                maxViewports:                   uint32_t = 16
                maxViewportDimensions:          uint32_t[2] = 0x7fff0cfda7d0
                    maxViewportDimensions[0]:       uint32_t = 32768
                    maxViewportDimensions[1]:       uint32_t = 32768
                viewportBoundsRange:            float[2] = 0x7fff0cfda7d8
                    viewportBoundsRange[0]:         float = -65536
                    viewportBoundsRange[1]:         float = 65536
                viewportSubPixelBits:           uint32_t = 8
                minMemoryMapAlignment:          size_t = 64
                minTexelBufferOffsetAlignment:  VkDeviceSize = 16
                minUniformBufferOffsetAlignment: VkDeviceSize = 256
                minStorageBufferOffsetAlignment: VkDeviceSize = 16
                minTexelOffset:                 int32_t = -8
                maxTexelOffset:                 uint32_t = 7
                minTexelGatherOffset:           int32_t = -32
                maxTexelGatherOffset:           uint32_t = 31
                minInterpolationOffset:         float = -0.5
                maxInterpolationOffset:         float = 0.4375
                subPixelInterpolationOffsetBits: uint32_t = 4
                maxFramebufferWidth:            uint32_t = 32768
                maxFramebufferHeight:           uint32_t = 32768
                maxFramebufferLayers:           uint32_t = 2048
                framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                maxColorAttachments:            uint32_t = 8
                sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
                storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
                maxSampleMaskWords:             uint32_t = 1
                timestampComputeAndGraphics:    VkBool32 = 1
                timestampPeriod:                float = 1
                maxClipDistances:               uint32_t = 8
                maxCullDistances:               uint32_t = 8
                maxCombinedClipAndCullDistances: uint32_t = 8
                discreteQueuePriorities:        uint32_t = 2
                pointSizeRange:                 float[2] = 0x7fff0cfda874
                    pointSizeRange[0]:              float = 1
                    pointSizeRange[1]:              float = 2047.94
                lineWidthRange:                 float[2] = 0x7fff0cfda87c
                    lineWidthRange[0]:              float = 1
                    lineWidthRange[1]:              float = 64
                pointSizeGranularity:           float = 0.0625
                lineWidthGranularity:           float = 0.0625
                strictLines:                    VkBool32 = 1
                standardSampleLocations:        VkBool32 = 1
                optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
                optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
                nonCoherentAtomSize:            VkDeviceSize = 64
            sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfda8b0:
                residencyStandard2DBlockShape:  VkBool32 = 1
                residencyStandard2DMultisampleBlockShape: VkBool32 = 1
                residencyStandard3DBlockShape:  VkBool32 = 1
                residencyAlignedMipSize:        VkBool32 = 0
                residencyNonResidentStrict:     VkBool32 = 1
        pNext:                          VkPhysicalDeviceMultiviewProperties = 0x200d958:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES (1000053002)
            pNext:                          void* = NULL
            maxMultiviewViewCount:          uint32_t = 32
            maxMultiviewInstanceIndex:      uint32_t = 134217727

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 0x200f6d8
    queueFamilyIndex:               uint32_t = 0
    queueIndex:                     uint32_t = 0
    pQueue:                         VkQueue* = 0x1e6d8b8

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 0x200f6d8
    queueFamilyIndex:               uint32_t = 0
    queueIndex:                     uint32_t = 0
    pQueue:                         VkQueue* = 0x1e6d8b8

Thread 0, Frame 0:
vkGetDeviceQueue(device, queueFamilyIndex, queueIndex, pQueue) returns void:
    device:                         VkDevice = 0x200f6d8
    queueFamilyIndex:               uint32_t = 0
    queueIndex:                     uint32_t = 0
    pQueue:                         VkQueue* = 0x1e6d8b8

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSurfaceCapabilities:           VkSurfaceCapabilitiesKHR* = 0x7fff0cfdb528:
        minImageCount:                  uint32_t = 2
        maxImageCount:                  uint32_t = 8
        currentExtent:                  VkExtent2D = 0x7fff0cfdb530:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        minImageExtent:                 VkExtent2D = 0x7fff0cfdb538:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        maxImageExtent:                 VkExtent2D = 0x7fff0cfdb540:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        maxImageArrayLayers:            uint32_t = 1
        supportedTransforms:            VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        currentTransform:               VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        supportedCompositeAlpha:        VkCompositeAlphaFlagsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        supportedUsageFlags:            VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSurfaceFormatCount:            uint32_t* = 2
    pSurfaceFormats:                VkSurfaceFormatKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceFormatsKHR(physicalDevice, surface, pSurfaceFormatCount, pSurfaceFormats) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSurfaceFormatCount:            uint32_t* = 2
    pSurfaceFormats:                VkSurfaceFormatKHR* = 0x1fff7e0
        pSurfaceFormats[0]:             VkSurfaceFormatKHR = 0x1fff7e0:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_UNORM (44)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        pSurfaceFormats[1]:             VkSurfaceFormatKHR = 0x1fff7e8:
            format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
            colorSpace:                     VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pPresentModeCount:              uint32_t* = 3
    pPresentModes:                  VkPresentModeKHR* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfacePresentModesKHR(physicalDevice, surface, pPresentModeCount, pPresentModes) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pPresentModeCount:              uint32_t* = 3
    pPresentModes:                  VkPresentModeKHR* = 0x1fff700
        pPresentModes[0]:               VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        pPresentModes[1]:               VkPresentModeKHR = VK_PRESENT_MODE_FIFO_RELAXED_KHR (3)
        pPresentModes[2]:               VkPresentModeKHR = VK_PRESENT_MODE_IMMEDIATE_KHR (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 0x229e7a0
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 0x229e7a0:
            queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 16
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x229e7ac:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties = 0x229e7b8:
            queueFlags:                     VkQueueFlags = 12 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 2
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x229e7c4:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[2]:      VkQueueFamilyProperties = 0x229e7d0:
            queueFlags:                     VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 8
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x229e7dc:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSupported:                     VkBool32* = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceCapabilitiesKHR(physicalDevice, surface, pSurfaceCapabilities) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSurfaceCapabilities:           VkSurfaceCapabilitiesKHR* = 0x7fff0cfdac20:
        minImageCount:                  uint32_t = 2
        maxImageCount:                  uint32_t = 8
        currentExtent:                  VkExtent2D = 0x7fff0cfdac28:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        minImageExtent:                 VkExtent2D = 0x7fff0cfdac30:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        maxImageExtent:                 VkExtent2D = 0x7fff0cfdac38:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        maxImageArrayLayers:            uint32_t = 1
        supportedTransforms:            VkSurfaceTransformFlagsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        currentTransform:               VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        supportedCompositeAlpha:        VkCompositeAlphaFlagsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        supportedUsageFlags:            VkImageUsageFlags = 159 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT | VK_IMAGE_USAGE_STORAGE_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT | VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdabd4:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceImageFormatProperties(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    type:                           VkImageType = VK_IMAGE_TYPE_2D (1)
    tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
    usage:                          VkImageUsageFlags = 19 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
    flags:                          VkImageCreateFlags = 0
    pImageFormatProperties:         VkImageFormatProperties* = 0x7fff0cfdac60:
        maxExtent:                      VkExtent3D = 0x7fff0cfdac60:
            width:                          uint32_t = 32768
            height:                         uint32_t = 32768
            depth:                          uint32_t = 1
        maxMipLevels:                   uint32_t = 16
        maxArrayLayers:                 uint32_t = 2048
        sampleCounts:                   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
        maxResourceSize:                VkDeviceSize = 18446744073709551615

Thread 0, Frame 0:
vkCreateSwapchainKHR(device, pCreateInfo, pAllocator, pSwapchain) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkSwapchainCreateInfoKHR* = 0x229e860:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR (1000001000)
        pNext:                          const void* = NULL
        flags:                          VkSwapchainCreateFlagsKHR = 0
        surface:                        VkSurfaceKHR = 0x1e69370
        minImageCount:                  uint32_t = 3
        imageFormat:                    VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        imageColorSpace:                VkColorSpaceKHR = VK_COLOR_SPACE_SRGB_NONLINEAR_KHR (0)
        imageExtent:                    VkExtent2D = 0x229e88c:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
        imageArrayLayers:               uint32_t = 1
        imageUsage:                     VkImageUsageFlags = 19 (VK_IMAGE_USAGE_TRANSFER_SRC_BIT | VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT)
        imageSharingMode:               VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        preTransform:                   VkSurfaceTransformFlagBitsKHR = 1 (VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR)
        compositeAlpha:                 VkCompositeAlphaFlagBitsKHR = 1 (VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR)
        presentMode:                    VkPresentModeKHR = VK_PRESENT_MODE_FIFO_KHR (2)
        clipped:                        VkBool32 = 1
        oldSwapchain:                   VkSwapchainKHR = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSwapchain:                     VkSwapchainKHR* = 0x229e918

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    swapchain:                      VkSwapchainKHR = 0x229e918
    pSwapchainImageCount:           uint32_t* = 3
    pSwapchainImages:               VkImage* = NULL

Thread 0, Frame 0:
vkGetSwapchainImagesKHR(device, swapchain, pSwapchainImageCount, pSwapchainImages) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    swapchain:                      VkSwapchainKHR = 0x229e918
    pSwapchainImageCount:           uint32_t* = 3
    pSwapchainImages:               VkImage* = 0x236fd10
        pSwapchainImages[0]:            VkImage = 0x1ffe5c8
        pSwapchainImages[1]:            VkImage = 0x236dee8
        pSwapchainImages[2]:            VkImage = 0x236f238

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdafc0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdafc0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdafc0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdae00:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkImageViewCreateInfo* = 0x7fff0cfdb0e0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0x1ffe5c8
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        components:                     VkComponentMapping = 0x7fff0cfdb108:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0x7fff0cfdb118:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0x1e68b38

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdb100:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdae00:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkImageViewCreateInfo* = 0x7fff0cfdb0e0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0x236dee8
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        components:                     VkComponentMapping = 0x7fff0cfdb108:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0x7fff0cfdb118:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0x1ffe9f8

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdb100:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdae00:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkImageViewCreateInfo* = 0x7fff0cfdb0e0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0x236f238
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
        components:                     VkComponentMapping = 0x7fff0cfdb108:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0x7fff0cfdb118:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0x2372158

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdb100:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdb1c8:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122369 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdab94:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122369 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdab94:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateRenderPass(device, pCreateInfo, pAllocator, pRenderPass) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkRenderPassCreateInfo* = 0x7fff0cfdb210:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO (38)
        pNext:                          const void* = NULL
        flags:                          VkRenderPassCreateFlags = 0
        attachmentCount:                uint32_t = 2
        pAttachments:                   const VkAttachmentDescription* = 0x23728b0
            pAttachments[0]:                const VkAttachmentDescription = 0x23728b0:
                flags:                          VkAttachmentDescriptionFlags = 0
                format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
                samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
                storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_STORE (0)
                stencilLoadOp:                  VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE (2)
                stencilStoreOp:                 VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE (1)
                initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                finalLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_PRESENT_SRC_KHR (1000001002)
            pAttachments[1]:                const VkAttachmentDescription = 0x23728d4:
                flags:                          VkAttachmentDescriptionFlags = 0
                format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
                samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                loadOp:                         VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_CLEAR (1)
                storeOp:                        VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE (1)
                stencilLoadOp:                  VkAttachmentLoadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE (2)
                stencilStoreOp:                 VkAttachmentStoreOp = VK_ATTACHMENT_STORE_OP_DONT_CARE (1)
                initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
                finalLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL (3)
        subpassCount:                   uint32_t = 1
        pSubpasses:                     const VkSubpassDescription* = 0x7fff0cfdb1c8
            pSubpasses[0]:                  const VkSubpassDescription = 0x7fff0cfdb1c8:
                flags:                          VkSubpassDescriptionFlags = 0
                pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
                inputAttachmentCount:           uint32_t = 0
                pInputAttachments:              const VkAttachmentReference* = NULL
                colorAttachmentCount:           uint32_t = 1
                pColorAttachments:              const VkAttachmentReference* = 0x7fff0cfdb1c0
                    pColorAttachments[0]:           const VkAttachmentReference = 0x7fff0cfdb1c0:
                        attachment:                     uint32_t = 0
                        layout:                         VkImageLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL (2)
                pResolveAttachments:            const VkAttachmentReference* = NULL
                pDepthStencilAttachment:        const VkAttachmentReference* = 0x7fff0cfdb1b8:
                    attachment:                     uint32_t = 1
                    layout:                         VkImageLayout = VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL (3)
                preserveAttachmentCount:        uint32_t = 0
                pPreserveAttachments:           const uint32_t* = NULL
        dependencyCount:                uint32_t = 1
        pDependencies:                  const VkSubpassDependency* = 0x7fff0cfdb250
            pDependencies[0]:               const VkSubpassDependency = 0x7fff0cfdb250:
                srcSubpass:                     uint32_t = 4294967295
                dstSubpass:                     uint32_t = 0
                srcStageMask:                   VkPipelineStageFlags = 1280 (VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT | VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
                dstStageMask:                   VkPipelineStageFlags = 1280 (VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT | VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT)
                srcAccessMask:                  VkAccessFlags = 0 (VK_ACCESS_NONE_KHR)
                dstAccessMask:                  VkAccessFlags = 1280 (VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT | VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT)
                dependencyFlags:                VkDependencyFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pRenderPass:                    VkRenderPass* = 0x2372c88

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceQueueFamilyProperties(physicalDevice, pQueueFamilyPropertyCount, pQueueFamilyProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pQueueFamilyPropertyCount:      uint32_t* = 3
    pQueueFamilyProperties:         VkQueueFamilyProperties* = 0x23728b0
        pQueueFamilyProperties[0]:      VkQueueFamilyProperties = 0x23728b0:
            queueFlags:                     VkQueueFlags = 15 (VK_QUEUE_GRAPHICS_BIT | VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 16
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x23728bc:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[1]:      VkQueueFamilyProperties = 0x23728c8:
            queueFlags:                     VkQueueFlags = 12 (VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 2
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x23728d4:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1
        pQueueFamilyProperties[2]:      VkQueueFamilyProperties = 0x23728e0:
            queueFlags:                     VkQueueFlags = 14 (VK_QUEUE_COMPUTE_BIT | VK_QUEUE_TRANSFER_BIT | VK_QUEUE_SPARSE_BINDING_BIT)
            queueCount:                     uint32_t = 8
            timestampValidBits:             uint32_t = 64
            minImageTransferGranularity:    VkExtent3D = 0x23728ec:
                width:                          uint32_t = 1
                height:                         uint32_t = 1
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkGetPhysicalDeviceSurfaceSupportKHR(physicalDevice, queueFamilyIndex, surface, pSupported) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    queueFamilyIndex:               uint32_t = 0
    surface:                        VkSurfaceKHR = 0x1e69370
    pSupported:                     VkBool32* = 1

Thread 0, Frame 0:
vkCreateDescriptorSetLayout(device, pCreateInfo, pAllocator, pSetLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkDescriptorSetLayoutCreateInfo* = 0x7fff0cfdb250:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO (32)
        pNext:                          const void* = NULL
        flags:                          VkDescriptorSetLayoutCreateFlags = 0
        bindingCount:                   uint32_t = 2
        pBindings:                      const VkDescriptorSetLayoutBinding* = 0x2373878
            pBindings[0]:                   const VkDescriptorSetLayoutBinding = 0x2373878:
                binding:                        uint32_t = 0
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 1 (VK_SHADER_STAGE_VERTEX_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[1]:                   const VkDescriptorSetLayoutBinding = 0x2373890:
                binding:                        uint32_t = 1
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 16 (VK_SHADER_STAGE_FRAGMENT_BIT)
                pImmutableSamplers:             const VkSampler* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSetLayout:                     VkDescriptorSetLayout* = 0x2373968

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 0x7fff0cfdaec0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 1868
        pCode:                          const uint32_t* = SHADER DATA
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 0x1e67958

Thread 0, Frame 0:
vkCreateShaderModule(device, pCreateInfo, pAllocator, pShaderModule) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkShaderModuleCreateInfo* = 0x7fff0cfdaec0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO (16)
        pNext:                          const void* = NULL
        flags:                          VkShaderModuleCreateFlags = 0
        codeSize:                       size_t = 764
        pCode:                          const uint32_t* = SHADER DATA
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pShaderModule:                  VkShaderModule* = 0x1e68138

Thread 0, Frame 0:
vkCreatePipelineLayout(device, pCreateInfo, pAllocator, pPipelineLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkPipelineLayoutCreateInfo* = 0x7fff0cfdaec0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO (30)
        pNext:                          const void* = NULL
        flags:                          VkPipelineLayoutCreateFlags = 0
        setLayoutCount:                 uint32_t = 1
        pSetLayouts:                    const VkDescriptorSetLayout* = 0x238c560
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 0x2373968
        pushConstantRangeCount:         uint32_t = 0
        pPushConstantRanges:            const VkPushConstantRange* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelineLayout:                VkPipelineLayout* = 0x23767d8

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R32G32B32_SFLOAT (106)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfda8c0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 0
        bufferFeatures:                 VkFormatFeatureFlags = 536870984 (VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT | VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R32G32B32_SFLOAT (106)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfda8c0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 0
        bufferFeatures:                 VkFormatFeatureFlags = 536870984 (VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT | VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R32G32_SFLOAT (103)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfda8c0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122243 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 536871000 (VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT | VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT | VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR)

Thread 0, Frame 0:
vkCreateGraphicsPipelines(device, pipelineCache, createInfoCount, pCreateInfos, pAllocator, pPipelines) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pipelineCache:                  VkPipelineCache = 0
    createInfoCount:                uint32_t = 1
    pCreateInfos:                   const VkGraphicsPipelineCreateInfo* = 0x237b298
        pCreateInfos[0]:                const VkGraphicsPipelineCreateInfo = 0x237b298:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO (28)
            pNext:                          const void* = NULL
            flags:                          VkPipelineCreateFlags = 0
            stageCount:                     uint32_t = 2
            pStages:                        const VkPipelineShaderStageCreateInfo* = 0x238c4e8
                pStages[0]:                     const VkPipelineShaderStageCreateInfo = 0x238c4e8:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 1 (VK_SHADER_STAGE_VERTEX_BIT)
                    module:                         VkShaderModule = 0x1e67958
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
                pStages[1]:                     const VkPipelineShaderStageCreateInfo = 0x238c518:
                    sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO (18)
                    pNext:                          const void* = NULL
                    flags:                          VkPipelineShaderStageCreateFlags = 0
                    stage:                          VkShaderStageFlagBits = 16 (VK_SHADER_STAGE_FRAGMENT_BIT)
                    module:                         VkShaderModule = 0x1e68138
                    pName:                          const char* = "main"
                    pSpecializationInfo:            const VkSpecializationInfo* = NULL
            pVertexInputState:              const VkPipelineVertexInputStateCreateInfo* = 0x238a7c0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO (19)
                pNext:                          const void* = NULL
                flags:                          VkPipelineVertexInputStateCreateFlags = 0
                vertexBindingDescriptionCount:  uint32_t = 1
                pVertexBindingDescriptions:     const VkVertexInputBindingDescription* = 0x237ddc0
                    pVertexBindingDescriptions[0]:  const VkVertexInputBindingDescription = 0x237ddc0:
                        binding:                        uint32_t = 0
                        stride:                         uint32_t = 32
                        inputRate:                      VkVertexInputRate = VK_VERTEX_INPUT_RATE_VERTEX (0)
                vertexAttributeDescriptionCount: uint32_t = 3
                pVertexAttributeDescriptions:   const VkVertexInputAttributeDescription* = 0x238b170
                    pVertexAttributeDescriptions[0]: const VkVertexInputAttributeDescription = 0x238b170:
                        location:                       uint32_t = 0
                        binding:                        uint32_t = 0
                        format:                         VkFormat = VK_FORMAT_R32G32B32_SFLOAT (106)
                        offset:                         uint32_t = 0
                    pVertexAttributeDescriptions[1]: const VkVertexInputAttributeDescription = 0x238b180:
                        location:                       uint32_t = 1
                        binding:                        uint32_t = 0
                        format:                         VkFormat = VK_FORMAT_R32G32B32_SFLOAT (106)
                        offset:                         uint32_t = 12
                    pVertexAttributeDescriptions[2]: const VkVertexInputAttributeDescription = 0x238b190:
                        location:                       uint32_t = 2
                        binding:                        uint32_t = 0
                        format:                         VkFormat = VK_FORMAT_R32G32_SFLOAT (103)
                        offset:                         uint32_t = 24
            pInputAssemblyState:            const VkPipelineInputAssemblyStateCreateInfo* = 0x238a9b0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO (20)
                pNext:                          const void* = NULL
                flags:                          VkPipelineInputAssemblyStateCreateFlags = 0
                topology:                       VkPrimitiveTopology = VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST (3)
                primitiveRestartEnable:         VkBool32 = 0
            pTessellationState:             const VkPipelineTessellationStateCreateInfo* = NULL
            pViewportState:                 const VkPipelineViewportStateCreateInfo* = 0x2385870:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO (22)
                pNext:                          const void* = NULL
                flags:                          VkPipelineViewportStateCreateFlags = 0
                viewportCount:                  uint32_t = 1
                pViewports:                     const VkViewport* = 0x2385d00
                    pViewports[0]:                  const VkViewport = 0x2385d00:
                        x:                              float = 0
                        y:                              float = 0
                        width:                          float = 512
                        height:                         float = 512
                        minDepth:                       float = 0
                        maxDepth:                       float = 1
                scissorCount:                   uint32_t = 1
                pScissors:                      const VkRect2D* = 0x2385250
                    pScissors[0]:                   const VkRect2D = 0x2385250:
                        offset:                         VkOffset2D = 0x2385250:
                            x:                              int32_t = 0
                            y:                              int32_t = 0
                        extent:                         VkExtent2D = 0x2385258:
                            width:                          uint32_t = 512
                            height:                         uint32_t = 512
            pRasterizationState:            const VkPipelineRasterizationStateCreateInfo* = 0x2380210:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO (23)
                pNext:                          const void* = NULL
                flags:                          VkPipelineRasterizationStateCreateFlags = 0
                depthClampEnable:               VkBool32 = 0
                rasterizerDiscardEnable:        VkBool32 = 0
                polygonMode:                    VkPolygonMode = VK_POLYGON_MODE_FILL (0)
                cullMode:                       VkCullModeFlags = 2 (VK_CULL_MODE_BACK_BIT)
                frontFace:                      VkFrontFace = VK_FRONT_FACE_COUNTER_CLOCKWISE (0)
                depthBiasEnable:                VkBool32 = 0
                depthBiasConstantFactor:        float = 0
                depthBiasClamp:                 float = 0
                depthBiasSlopeFactor:           float = 0
                lineWidth:                      float = 1
            pMultisampleState:              const VkPipelineMultisampleStateCreateInfo* = 0x2385cc0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO (24)
                pNext:                          const void* = NULL
                flags:                          VkPipelineMultisampleStateCreateFlags = 0
                rasterizationSamples:           VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
                sampleShadingEnable:            VkBool32 = 0
                minSampleShading:               float = 0
                pSampleMask:                    const VkSampleMask* = NULL
                alphaToCoverageEnable:          VkBool32 = 0
                alphaToOneEnable:               VkBool32 = 0
            pDepthStencilState:             const VkPipelineDepthStencilStateCreateInfo* = 0x2375da0:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO (25)
                pNext:                          const void* = NULL
                flags:                          VkPipelineDepthStencilStateCreateFlags = 0
                depthTestEnable:                VkBool32 = 1
                depthWriteEnable:               VkBool32 = 1
                depthCompareOp:                 VkCompareOp = VK_COMPARE_OP_LESS (1)
                depthBoundsTestEnable:          VkBool32 = 0
                stencilTestEnable:              VkBool32 = 0
                front:                          VkStencilOpState = 0x2375dc8:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                back:                           VkStencilOpState = 0x2375de4:
                    failOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    passOp:                         VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    depthFailOp:                    VkStencilOp = VK_STENCIL_OP_KEEP (0)
                    compareOp:                      VkCompareOp = VK_COMPARE_OP_NEVER (0)
                    compareMask:                    uint32_t = 0
                    writeMask:                      uint32_t = 0
                    reference:                      uint32_t = 0
                minDepthBounds:                 float = 0
                maxDepthBounds:                 float = 1
            pColorBlendState:               const VkPipelineColorBlendStateCreateInfo* = 0x237e640:
                sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO (26)
                pNext:                          const void* = NULL
                flags:                          VkPipelineColorBlendStateCreateFlags = 0
                logicOpEnable:                  VkBool32 = 0
                logicOp:                        VkLogicOp = VK_LOGIC_OP_COPY (3)
                attachmentCount:                uint32_t = 1
                pAttachments:                   const VkPipelineColorBlendAttachmentState* = 0x238a900
                    pAttachments[0]:                const VkPipelineColorBlendAttachmentState = 0x238a900:
                        blendEnable:                    VkBool32 = 0
                        srcColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstColorBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        colorBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        srcAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        dstAlphaBlendFactor:            VkBlendFactor = VK_BLEND_FACTOR_ZERO (0)
                        alphaBlendOp:                   VkBlendOp = VK_BLEND_OP_ADD (0)
                        colorWriteMask:                 VkColorComponentFlags = 15 (VK_COLOR_COMPONENT_R_BIT | VK_COLOR_COMPONENT_G_BIT | VK_COLOR_COMPONENT_B_BIT | VK_COLOR_COMPONENT_A_BIT)
                blendConstants:                 float[4] = 0x237e668
                    blendConstants[0]:              float = 0
                    blendConstants[1]:              float = 0
                    blendConstants[2]:              float = 0
                    blendConstants[3]:              float = 0
            pDynamicState:                  const VkPipelineDynamicStateCreateInfo* = NULL
            layout:                         VkPipelineLayout = 0x23767d8
            renderPass:                     VkRenderPass = 0x2372c88
            subpass:                        uint32_t = 0
            basePipelineHandle:             VkPipeline = 0
            basePipelineIndex:              int32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelines:                     VkPipeline* = 0x7fff0cfdb920
        pPipelines[0]:                  VkPipeline = 0x237ac58

Thread 0, Frame 0:
vkDestroyShaderModule(device, shaderModule, pAllocator) returns void:
    device:                         VkDevice = 0x200f6d8
    shaderModule:                   VkShaderModule = 0x1e68138
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkDestroyShaderModule(device, shaderModule, pAllocator) returns void:
    device:                         VkDevice = 0x200f6d8
    shaderModule:                   VkShaderModule = 0x1e67958
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateCommandPool(device, pCreateInfo, pAllocator, pCommandPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkCommandPoolCreateInfo* = 0x7fff0cfdb3c0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO (39)
        pNext:                          const void* = NULL
        flags:                          VkCommandPoolCreateFlags = 0
        queueFamilyIndex:               uint32_t = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pCommandPool:                   VkCommandPool* = 0x1ddabb8

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdb300:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122369 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceImageFormatProperties(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
    type:                           VkImageType = VK_IMAGE_TYPE_2D (1)
    tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
    usage:                          VkImageUsageFlags = 32 (VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT)
    flags:                          VkImageCreateFlags = 0
    pImageFormatProperties:         VkImageFormatProperties* = 0x7fff0cfdade0:
        maxExtent:                      VkExtent3D = 0x7fff0cfdade0:
            width:                          uint32_t = 32768
            height:                         uint32_t = 32768
            depth:                          uint32_t = 1
        maxMipLevels:                   uint32_t = 16
        maxArrayLayers:                 uint32_t = 2048
        sampleCounts:                   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
        maxResourceSize:                VkDeviceSize = 18446744073709551615

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdacd0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122369 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkImageCreateInfo* = 0x7fff0cfdae80:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
        extent:                         VkExtent3D = 0x7fff0cfdae9c:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 32 (VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 0x2376078

Thread 0, Frame 0:
vkGetImageMemoryRequirements(device, image, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    image:                          VkImage = 0x2376078
    pMemoryRequirements:            VkMemoryRequirements* = 0x2388eb0:
        size:                           VkDeviceSize = 1048576
        alignment:                      VkDeviceSize = 1024
        memoryTypeBits:                 uint32_t = 144

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdadc0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122369 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetImageMemoryRequirements(device, image, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    image:                          VkImage = 0x2376078
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdb020:
        size:                           VkDeviceSize = 1048576
        alignment:                      VkDeviceSize = 1024
        memoryTypeBits:                 uint32_t = 144

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb038:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb03c
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb03c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb044:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb04c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb054:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb05c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb064:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb06c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb074:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb07c:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb084:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb08c:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb140
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb140:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb150:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb160:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdaeb0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 1048576
        memoryTypeIndex:                uint32_t = 7
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x2389868

Thread 0, Frame 0:
vkBindImageMemory(device, image, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    image:                          VkImage = 0x2376078
    memory:                         VkDeviceMemory = 0x2389868
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdae70:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122369 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkImageViewCreateInfo* = 0x7fff0cfdb150:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0x2376078
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
        components:                     VkComponentMapping = 0x7fff0cfdb178:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0x7fff0cfdb188:
            aspectMask:                     VkImageAspectFlags = 2 (VK_IMAGE_ASPECT_DEPTH_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0x2375718

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_D32_SFLOAT (126)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdb170:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122369 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkFramebufferCreateInfo* = 0x7fff0cfdb1f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 0x2372c88
        attachmentCount:                uint32_t = 2
        pAttachments:                   const VkImageView* = 0x23854a0
            pAttachments[0]:                const VkImageView = 0x1e68b38
            pAttachments[1]:                const VkImageView = 0x2375718
        width:                          uint32_t = 512
        height:                         uint32_t = 512
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 0x1e67958

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkFramebufferCreateInfo* = 0x7fff0cfdb1f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 0x2372c88
        attachmentCount:                uint32_t = 2
        pAttachments:                   const VkImageView* = 0x238ab50
            pAttachments[0]:                const VkImageView = 0x1ffe9f8
            pAttachments[1]:                const VkImageView = 0x2375718
        width:                          uint32_t = 512
        height:                         uint32_t = 512
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 0x1e68138

Thread 0, Frame 0:
vkCreateFramebuffer(device, pCreateInfo, pAllocator, pFramebuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkFramebufferCreateInfo* = 0x7fff0cfdb1f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO (37)
        pNext:                          const void* = NULL
        flags:                          VkFramebufferCreateFlags = 0
        renderPass:                     VkRenderPass = 0x2372c88
        attachmentCount:                uint32_t = 2
        pAttachments:                   const VkImageView* = 0x237dc70
            pAttachments[0]:                const VkImageView = 0x2372158
            pAttachments[1]:                const VkImageView = 0x2375718
        width:                          uint32_t = 512
        height:                         uint32_t = 512
        layers:                         uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFramebuffer:                   VkFramebuffer* = 0x1e64cf8

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdaec0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 16777216
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x21d7ee8

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pMemoryRequirements:            VkMemoryRequirements* = 0x2382230:
        size:                           VkDeviceSize = 16777216
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdaf98:
        size:                           VkDeviceSize = 16777216
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdafb0:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdafb4
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdafb4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdafbc:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdafc4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdafcc:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdafd4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdafdc:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdafe4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdafec:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdaff4:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdaffc:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb004:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb0b8
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb0b8:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb0c8:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb0d8:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdae50:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 16777216
        memoryTypeIndex:                uint32_t = 8
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x2389478

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    memory:                         VkDeviceMemory = 0x2389478
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    memory:                         VkDeviceMemory = 0x2389478
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 16777216
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 0x7fb93dfff000

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 0x200f6d8
    memory:                         VkDeviceMemory = 0x2389478

Thread 0, Frame 0:
vkGetPhysicalDeviceImageFormatProperties(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    type:                           VkImageType = VK_IMAGE_TYPE_2D (1)
    tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
    usage:                          VkImageUsageFlags = 6 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
    flags:                          VkImageCreateFlags = 0
    pImageFormatProperties:         VkImageFormatProperties* = 0x7fff0cfdad60:
        maxExtent:                      VkExtent3D = 0x7fff0cfdad60:
            width:                          uint32_t = 32768
            height:                         uint32_t = 32768
            depth:                          uint32_t = 1
        maxMipLevels:                   uint32_t = 16
        maxArrayLayers:                 uint32_t = 2048
        sampleCounts:                   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
        maxResourceSize:                VkDeviceSize = 18446744073709551615

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdac50:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkImageCreateInfo* = 0x7fff0cfdae00:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
        extent:                         VkExtent3D = 0x7fff0cfdae1c:
            width:                          uint32_t = 2048
            height:                         uint32_t = 2048
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 6 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 0x2381e88

Thread 0, Frame 0:
vkGetImageMemoryRequirements(device, image, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    image:                          VkImage = 0x2381e88
    pMemoryRequirements:            VkMemoryRequirements* = 0x2383260:
        size:                           VkDeviceSize = 16777216
        alignment:                      VkDeviceSize = 1024
        memoryTypeBits:                 uint32_t = 130

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdad40:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetImageMemoryRequirements(device, image, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    image:                          VkImage = 0x2381e88
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdafa0:
        size:                           VkDeviceSize = 16777216
        alignment:                      VkDeviceSize = 1024
        memoryTypeBits:                 uint32_t = 130

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdafb8:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdafbc
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdafbc:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdafc4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdafcc:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdafd4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdafdc:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdafe4:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdafec:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdaff4:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdaffc:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb004:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb00c:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb0c0
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb0c0:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb0d0:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb0e0:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdae30:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 16777216
        memoryTypeIndex:                uint32_t = 7
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x23856c8

Thread 0, Frame 0:
vkBindImageMemory(device, image, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    image:                          VkImage = 0x2381e88
    memory:                         VkDeviceMemory = 0x23856c8
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x7fff0cfdb010:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0x1ddabb8
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 0x7fff0cfdb118
        pCommandBuffers[0]:             VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdb120:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    srcStageMask:                   VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dstStageMask:                   VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dependencyFlags:                VkDependencyFlags = 0
    memoryBarrierCount:             uint32_t = 0
    pMemoryBarriers:                const VkMemoryBarrier* = NULL
    bufferMemoryBarrierCount:       uint32_t = 0
    pBufferMemoryBarriers:          const VkBufferMemoryBarrier* = NULL
    imageMemoryBarrierCount:        uint32_t = 1
    pImageMemoryBarriers:           const VkImageMemoryBarrier* = 0x238b938
        pImageMemoryBarriers[0]:        const VkImageMemoryBarrier = 0x238b938:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:                          const void* = NULL
            srcAccessMask:                  VkAccessFlags = 0 (VK_ACCESS_NONE_KHR)
            dstAccessMask:                  VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:            uint32_t = 4294967295
            dstQueueFamilyIndex:            uint32_t = 4294967295
            image:                          VkImage = 0x2381e88
            subresourceRange:               VkImageSubresourceRange = 0x238b968:
                aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:                   uint32_t = 0
                levelCount:                     uint32_t = 1
                baseArrayLayer:                 uint32_t = 0
                layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x238b938
        pSubmits[0]:                    const VkSubmitInfo = 0x238b938:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 0
            pWaitSemaphores:                const VkSemaphore* = NULL
            pWaitDstStageMask:              const VkPipelineStageFlags* = NULL
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x2385070
                pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278
            signalSemaphoreCount:           uint32_t = 0
            pSignalSemaphores:              const VkSemaphore* = NULL
    fence:                          VkFence = 0

Thread 0, Frame 0:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8

Thread 0, Frame 0:
vkFreeCommandBuffers(device, commandPool, commandBufferCount, pCommandBuffers) returns void:
    device:                         VkDevice = 0x200f6d8
    commandPool:                    VkCommandPool = 0x1ddabb8
    commandBufferCount:             uint32_t = 1
    pCommandBuffers:                const VkCommandBuffer* = 0x7fff0cfdb118
        pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x7fff0cfdb0f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0x1ddabb8
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 0x7fff0cfdb270
        pCommandBuffers[0]:             VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdb2c0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdCopyBufferToImage(commandBuffer, srcBuffer, dstImage, dstImageLayout, regionCount, pRegions) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    srcBuffer:                      VkBuffer = 0x21d7ee8
    dstImage:                       VkImage = 0x2381e88
    dstImageLayout:                 VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
    regionCount:                    uint32_t = 1
    pRegions:                       const VkBufferImageCopy* = 0x7fff0cfdb2c0
        pRegions[0]:                    const VkBufferImageCopy = 0x7fff0cfdb2c0:
            bufferOffset:                   VkDeviceSize = 0
            bufferRowLength:                uint32_t = 0
            bufferImageHeight:              uint32_t = 0
            imageSubresource:               VkImageSubresourceLayers = 0x7fff0cfdb2d0:
                aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                mipLevel:                       uint32_t = 0
                baseArrayLayer:                 uint32_t = 0
                layerCount:                     uint32_t = 1
            imageOffset:                    VkOffset3D = 0x7fff0cfdb2e0:
                x:                              int32_t = 0
                y:                              int32_t = 0
                z:                              int32_t = 0
            imageExtent:                    VkExtent3D = 0x7fff0cfdb2ec:
                width:                          uint32_t = 2048
                height:                         uint32_t = 2048
                depth:                          uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x238b938
        pSubmits[0]:                    const VkSubmitInfo = 0x238b938:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 0
            pWaitSemaphores:                const VkSemaphore* = NULL
            pWaitDstStageMask:              const VkPipelineStageFlags* = NULL
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x23ab910
                pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278
            signalSemaphoreCount:           uint32_t = 0
            pSignalSemaphores:              const VkSemaphore* = NULL
    fence:                          VkFence = 0

Thread 0, Frame 0:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8

Thread 0, Frame 0:
vkFreeCommandBuffers(device, commandPool, commandBufferCount, pCommandBuffers) returns void:
    device:                         VkDevice = 0x200f6d8
    commandPool:                    VkCommandPool = 0x1ddabb8
    commandBufferCount:             uint32_t = 1
    pCommandBuffers:                const VkCommandBuffer* = 0x7fff0cfdb270
        pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x7fff0cfdb010:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0x1ddabb8
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 0x7fff0cfdb118
        pCommandBuffers[0]:             VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdb120:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    srcStageMask:                   VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask:                   VkPipelineStageFlags = 128 (VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT)
    dependencyFlags:                VkDependencyFlags = 0
    memoryBarrierCount:             uint32_t = 0
    pMemoryBarriers:                const VkMemoryBarrier* = NULL
    bufferMemoryBarrierCount:       uint32_t = 0
    pBufferMemoryBarriers:          const VkBufferMemoryBarrier* = NULL
    imageMemoryBarrierCount:        uint32_t = 1
    pImageMemoryBarriers:           const VkImageMemoryBarrier* = 0x238b938
        pImageMemoryBarriers[0]:        const VkImageMemoryBarrier = 0x238b938:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:                          const void* = NULL
            srcAccessMask:                  VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:                  VkAccessFlags = 32 (VK_ACCESS_SHADER_READ_BIT)
            oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            srcQueueFamilyIndex:            uint32_t = 4294967295
            dstQueueFamilyIndex:            uint32_t = 4294967295
            image:                          VkImage = 0x2381e88
            subresourceRange:               VkImageSubresourceRange = 0x238b968:
                aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:                   uint32_t = 0
                levelCount:                     uint32_t = 1
                baseArrayLayer:                 uint32_t = 0
                layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x238b938
        pSubmits[0]:                    const VkSubmitInfo = 0x238b938:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 0
            pWaitSemaphores:                const VkSemaphore* = NULL
            pWaitDstStageMask:              const VkPipelineStageFlags* = NULL
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x23765f0
                pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278
            signalSemaphoreCount:           uint32_t = 0
            pSignalSemaphores:              const VkSemaphore* = NULL
    fence:                          VkFence = 0

Thread 0, Frame 0:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8

Thread 0, Frame 0:
vkFreeCommandBuffers(device, commandPool, commandBufferCount, pCommandBuffers) returns void:
    device:                         VkDevice = 0x200f6d8
    commandPool:                    VkCommandPool = 0x1ddabb8
    commandBufferCount:             uint32_t = 1
    pCommandBuffers:                const VkCommandBuffer* = 0x7fff0cfdb118
        pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 0x200f6d8
    memory:                         VkDeviceMemory = 0x2389478
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdaf00:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkImageViewCreateInfo* = 0x7fff0cfdb1e0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0x2381e88
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
        components:                     VkComponentMapping = 0x7fff0cfdb208:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0x7fff0cfdb218:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0x23acc48

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdb200:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdb030:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb144
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb158:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb234
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb244
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb270
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfdb278
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb314
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfdb31c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb350:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkCreateSampler(device, pCreateInfo, pAllocator, pSampler) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkSamplerCreateInfo* = 0x7fff0cfdaec0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO (31)
        pNext:                          const void* = NULL
        flags:                          VkSamplerCreateFlags = 0
        magFilter:                      VkFilter = VK_FILTER_LINEAR (1)
        minFilter:                      VkFilter = VK_FILTER_LINEAR (1)
        mipmapMode:                     VkSamplerMipmapMode = VK_SAMPLER_MIPMAP_MODE_LINEAR (1)
        addressModeU:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeV:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeW:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        mipLodBias:                     float = 0
        anisotropyEnable:               VkBool32 = 1
        maxAnisotropy:                  float = 16
        compareEnable:                  VkBool32 = 0
        compareOp:                      VkCompareOp = VK_COMPARE_OP_ALWAYS (7)
        minLod:                         float = 0
        maxLod:                         float = 0
        borderColor:                    VkBorderColor = VK_BORDER_COLOR_INT_OPAQUE_BLACK (3)
        unnormalizedCoordinates:        VkBool32 = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSampler:                       VkSampler* = 0x23a8688

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdaf40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 1178048
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x21d7ee8

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pMemoryRequirements:            VkMemoryRequirements* = 0x23c0f80:
        size:                           VkDeviceSize = 1178112
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdb018:
        size:                           VkDeviceSize = 1178112
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb030:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb034
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb034:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb03c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb044:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb04c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb054:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb05c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb064:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb06c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb074:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb07c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb084:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb138
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb138:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb148:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb158:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdaed0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 1178112
        memoryTypeIndex:                uint32_t = 8
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x2389478

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    memory:                         VkDeviceMemory = 0x2389478
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    memory:                         VkDeviceMemory = 0x2389478
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 1178048
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 0x7fb9449cb600

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 0x200f6d8
    memory:                         VkDeviceMemory = 0x2389478

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdaf40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 1178048
        usage:                          VkBufferUsageFlags = 130 (VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_VERTEX_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x21d59d8

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d59d8
    pMemoryRequirements:            VkMemoryRequirements* = 0x23bf7f0:
        size:                           VkDeviceSize = 1178112
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d59d8
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdb018:
        size:                           VkDeviceSize = 1178112
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb030:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb034
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb034:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb03c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb044:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb04c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb054:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb05c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb064:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb06c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb074:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb07c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb084:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb138
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb138:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb148:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb158:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdaed0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 1178112
        memoryTypeIndex:                uint32_t = 7
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x23bf938

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d59d8
    memory:                         VkDeviceMemory = 0x23bf938
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x7fff0cfdb170:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0x1ddabb8
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 0x7fff0cfdb2a8
        pCommandBuffers[0]:             VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdb2d0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, regionCount, pRegions) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    srcBuffer:                      VkBuffer = 0x21d7ee8
    dstBuffer:                      VkBuffer = 0x21d59d8
    regionCount:                    uint32_t = 1
    pRegions:                       const VkBufferCopy* = 0x7fff0cfdb2d0
        pRegions[0]:                    const VkBufferCopy = 0x7fff0cfdb2d0:
            srcOffset:                      VkDeviceSize = 0
            dstOffset:                      VkDeviceSize = 0
            size:                           VkDeviceSize = 1178048

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x238b938
        pSubmits[0]:                    const VkSubmitInfo = 0x238b938:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 0
            pWaitSemaphores:                const VkSemaphore* = NULL
            pWaitDstStageMask:              const VkPipelineStageFlags* = NULL
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x23a9d90
                pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278
            signalSemaphoreCount:           uint32_t = 0
            pSignalSemaphores:              const VkSemaphore* = NULL
    fence:                          VkFence = 0

Thread 0, Frame 0:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8

Thread 0, Frame 0:
vkFreeCommandBuffers(device, commandPool, commandBufferCount, pCommandBuffers) returns void:
    device:                         VkDevice = 0x200f6d8
    commandPool:                    VkCommandPool = 0x1ddabb8
    commandBufferCount:             uint32_t = 1
    pCommandBuffers:                const VkCommandBuffer* = 0x7fff0cfdb2a8
        pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 0x200f6d8
    memory:                         VkDeviceMemory = 0x2389478
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdaf40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 599988
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x21d7ee8

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pMemoryRequirements:            VkMemoryRequirements* = 0x23c0f80:
        size:                           VkDeviceSize = 600064
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdb018:
        size:                           VkDeviceSize = 600064
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb030:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb034
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb034:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb03c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb044:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb04c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb054:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb05c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb064:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb06c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb074:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb07c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb084:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb138
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb138:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb148:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb158:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdaed0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 600064
        memoryTypeIndex:                uint32_t = 8
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x2389478

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    memory:                         VkDeviceMemory = 0x2389478
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkMapMemory(device, memory, offset, size, flags, ppData) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    memory:                         VkDeviceMemory = 0x2389478
    offset:                         VkDeviceSize = 0
    size:                           VkDeviceSize = 599988
    flags:                          VkMemoryMapFlags = 0
    ppData:                         void** = 0x7fb944a58800

Thread 0, Frame 0:
vkUnmapMemory(device, memory) returns void:
    device:                         VkDevice = 0x200f6d8
    memory:                         VkDeviceMemory = 0x2389478

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdaf40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 599988
        usage:                          VkBufferUsageFlags = 66 (VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_INDEX_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x21d5258

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d5258
    pMemoryRequirements:            VkMemoryRequirements* = 0x27c43e0:
        size:                           VkDeviceSize = 600064
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d5258
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdb018:
        size:                           VkDeviceSize = 600064
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb030:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb034
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb034:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb03c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb044:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb04c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb054:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb05c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb064:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb06c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb074:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb07c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb084:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb138
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb138:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb148:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb158:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdaed0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 600064
        memoryTypeIndex:                uint32_t = 7
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x27c4588

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d5258
    memory:                         VkDeviceMemory = 0x27c4588
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x7fff0cfdb170:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0x1ddabb8
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 0x7fff0cfdb2a8
        pCommandBuffers[0]:             VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdb2d0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, regionCount, pRegions) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    srcBuffer:                      VkBuffer = 0x21d7ee8
    dstBuffer:                      VkBuffer = 0x21d5258
    regionCount:                    uint32_t = 1
    pRegions:                       const VkBufferCopy* = 0x7fff0cfdb2d0
        pRegions[0]:                    const VkBufferCopy = 0x7fff0cfdb2d0:
            srcOffset:                      VkDeviceSize = 0
            dstOffset:                      VkDeviceSize = 0
            size:                           VkDeviceSize = 599988

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x238b938
        pSubmits[0]:                    const VkSubmitInfo = 0x238b938:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 0
            pWaitSemaphores:                const VkSemaphore* = NULL
            pWaitDstStageMask:              const VkPipelineStageFlags* = NULL
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x23ab910
                pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278
            signalSemaphoreCount:           uint32_t = 0
            pSignalSemaphores:              const VkSemaphore* = NULL
    fence:                          VkFence = 0

Thread 0, Frame 0:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8

Thread 0, Frame 0:
vkFreeCommandBuffers(device, commandPool, commandBufferCount, pCommandBuffers) returns void:
    device:                         VkDevice = 0x200f6d8
    commandPool:                    VkCommandPool = 0x1ddabb8
    commandBufferCount:             uint32_t = 1
    pCommandBuffers:                const VkCommandBuffer* = 0x7fff0cfdb2a8
        pCommandBuffers[0]:             const VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkDestroyBuffer(device, buffer, pAllocator) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkFreeMemory(device, memory, pAllocator) returns void:
    device:                         VkDevice = 0x200f6d8
    memory:                         VkDeviceMemory = 0x2389478
    pAllocator:                     const VkAllocationCallbacks* = NULL

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdb050:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 192
        usage:                          VkBufferUsageFlags = 16 (VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x21d7ee8

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pMemoryRequirements:            VkMemoryRequirements* = 0x23c0f80:
        size:                           VkDeviceSize = 256
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdb128:
        size:                           VkDeviceSize = 256
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb140:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb144
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb144:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb14c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb154:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb15c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb164:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb16c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb174:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb17c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb184:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb18c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb194:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb248
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb248:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb258:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb268:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdafe0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 256
        memoryTypeIndex:                uint32_t = 8
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x2389478

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x21d7ee8
    memory:                         VkDeviceMemory = 0x2389478
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdb050:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 192
        usage:                          VkBufferUsageFlags = 16 (VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x27c55f8

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27c55f8
    pMemoryRequirements:            VkMemoryRequirements* = 0x27c5860:
        size:                           VkDeviceSize = 256
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27c55f8
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdb128:
        size:                           VkDeviceSize = 256
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb140:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb144
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb144:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb14c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb154:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb15c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb164:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb16c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb174:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb17c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb184:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb18c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb194:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb248
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb248:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb258:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb268:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdafe0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 256
        memoryTypeIndex:                uint32_t = 8
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x27c5a08

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27c55f8
    memory:                         VkDeviceMemory = 0x27c5a08
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdb050:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 192
        usage:                          VkBufferUsageFlags = 16 (VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x27c6158

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27c6158
    pMemoryRequirements:            VkMemoryRequirements* = 0x27c6430:
        size:                           VkDeviceSize = 256
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27c6158
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdb128:
        size:                           VkDeviceSize = 256
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb140:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb144
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb144:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb14c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb154:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb15c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb164:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb16c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb174:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb17c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb184:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb18c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb194:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb248
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb248:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb258:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb268:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdafe0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 256
        memoryTypeIndex:                uint32_t = 8
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x27c65d8

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27c6158
    memory:                         VkDeviceMemory = 0x27c65d8
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateDescriptorPool(device, pCreateInfo, pAllocator, pDescriptorPool) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkDescriptorPoolCreateInfo* = 0x7fff0cfdb320:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO (33)
        pNext:                          const void* = NULL
        flags:                          VkDescriptorPoolCreateFlags = 0
        maxSets:                        uint32_t = 6
        poolSizeCount:                  uint32_t = 4
        pPoolSizes:                     const VkDescriptorPoolSize* = 0x27c6cf0
            pPoolSizes[0]:                  const VkDescriptorPoolSize = 0x27c6cf0:
                type:                           VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
                descriptorCount:                uint32_t = 3
            pPoolSizes[1]:                  const VkDescriptorPoolSize = 0x27c6cf8:
                type:                           VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
                descriptorCount:                uint32_t = 6
            pPoolSizes[2]:                  const VkDescriptorPoolSize = 0x27c6d00:
                type:                           VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE (3)
                descriptorCount:                uint32_t = 3
            pPoolSizes[3]:                  const VkDescriptorPoolSize = 0x27c6d08:
                type:                           VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 3
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pDescriptorPool:                VkDescriptorPool* = 0x237e228

Thread 0, Frame 0:
vkAllocateDescriptorSets(device, pAllocateInfo, pDescriptorSets) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkDescriptorSetAllocateInfo* = 0x27c8200:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO (34)
        pNext:                          const void* = NULL
        descriptorPool:                 VkDescriptorPool = 0x237e228
        descriptorSetCount:             uint32_t = 3
        pSetLayouts:                    const VkDescriptorSetLayout* = 0x23a9d90
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 0x2373968
            pSetLayouts[1]:                 const VkDescriptorSetLayout = 0x2373968
            pSetLayouts[2]:                 const VkDescriptorSetLayout = 0x2373968
    pDescriptorSets:                VkDescriptorSet* = 0x237b170
        pDescriptorSets[0]:             VkDescriptorSet = 0x27c70f8
        pDescriptorSets[1]:             VkDescriptorSet = 0x27c7408
        pDescriptorSets[2]:             VkDescriptorSet = 0x27c7718

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 0x200f6d8
    descriptorWriteCount:           uint32_t = 2
    pDescriptorWrites:              const VkWriteDescriptorSet* = 0x1957918
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 0x1957918:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c70f8
            dstBinding:                     uint32_t = 0
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 0x27c8e00
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 0x27c8e00:
                    buffer:                         VkBuffer = 0x21d7ee8
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 192
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[1]:           const VkWriteDescriptorSet = 0x1957958:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c70f8
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 0x27c8e20
                pImageInfo[0]:                  const VkDescriptorImageInfo = 0x27c8e20:
                    sampler:                        VkSampler = 0x23a8688
                    imageView:                      VkImageView = 0x23acc48
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 0x200f6d8
    descriptorWriteCount:           uint32_t = 2
    pDescriptorWrites:              const VkWriteDescriptorSet* = 0x1957918
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 0x1957918:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c7408
            dstBinding:                     uint32_t = 0
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 0x27c8e00
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 0x27c8e00:
                    buffer:                         VkBuffer = 0x27c55f8
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 192
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[1]:           const VkWriteDescriptorSet = 0x1957958:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c7408
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 0x27c8e20
                pImageInfo[0]:                  const VkDescriptorImageInfo = 0x27c8e20:
                    sampler:                        VkSampler = 0x23a8688
                    imageView:                      VkImageView = 0x23acc48
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 0x200f6d8
    descriptorWriteCount:           uint32_t = 2
    pDescriptorWrites:              const VkWriteDescriptorSet* = 0x1957918
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 0x1957918:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c7718
            dstBinding:                     uint32_t = 0
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER (6)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 0x27c8e00
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 0x27c8e00:
                    buffer:                         VkBuffer = 0x27c6158
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 192
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[1]:           const VkWriteDescriptorSet = 0x1957958:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c7718
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER (1)
            pImageInfo:                     const VkDescriptorImageInfo* = 0x27c8e20
                pImageInfo[0]:                  const VkDescriptorImageInfo = 0x27c8e20:
                    sampler:                        VkSampler = 0x23a8688
                    imageView:                      VkImageView = 0x23acc48
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x7fff0cfdb190:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0x1ddabb8
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 3
    pCommandBuffers:                VkCommandBuffer* = 0x23a9d50
        pCommandBuffers[0]:             VkCommandBuffer = 0x23a7278
        pCommandBuffers[1]:             VkCommandBuffer = 0x27c8e88
        pCommandBuffers[2]:             VkCommandBuffer = 0x27c9ef8

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdb320:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 0
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 0x7fff0cfdb1a0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 0x2372c88
        framebuffer:                    VkFramebuffer = 0x1e67958
        renderArea:                     VkRect2D = 0x7fff0cfdb1c0:
            offset:                         VkOffset2D = 0x7fff0cfdb1c0:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0x7fff0cfdb1c8:
                width:                          uint32_t = 512
                height:                         uint32_t = 512
        clearValueCount:                uint32_t = 2
        pClearValues:                   const VkClearValue* = 0x27cd780
            pClearValues[0]:                const VkClearValue = 0x27cd780 (Union):
                color:                          VkClearColorValue = 0x27cd780 (Union):
                    float32:                        float[4] = 0x27cd780
                        float32[0]:                     float = 0
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 0x27cd780
                        int32[0]:                       int32_t = 0
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 0x27cd780
                        uint32[0]:                      uint32_t = 0
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 0x27cd780:
                    depth:                          float = 0
                    stencil:                        uint32_t = 0
            pClearValues[1]:                const VkClearValue = 0x27cd790 (Union):
                color:                          VkClearColorValue = 0x27cd790 (Union):
                    float32:                        float[4] = 0x27cd790
                        float32[0]:                     float = 1
                        float32[1]:                     float = 0
                        float32[2]:                     float = 6.02558e-44
                        float32[3]:                     float = 1.54255e-41
                    int32:                          int32_t[4] = 0x27cd790
                        int32[0]:                       int32_t = 1065353216
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 43
                        int32[3]:                       int32_t = 11008
                    uint32:                         uint32_t[4] = 0x27cd790
                        uint32[0]:                      uint32_t = 1065353216
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 43
                        uint32[3]:                      uint32_t = 11008
                depthStencil:                   VkClearDepthStencilValue = 0x27cd790:
                    depth:                          float = 1
                    stencil:                        uint32_t = 0
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdafa4:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 0x237ac58

Thread 0, Frame 0:
vkCmdBindVertexBuffers(commandBuffer, firstBinding, bindingCount, pBuffers, pOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    firstBinding:                   uint32_t = 0
    bindingCount:                   uint32_t = 1
    pBuffers:                       const VkBuffer* = 0x7fff0cfdb0c0
        pBuffers[0]:                    const VkBuffer = 0x21d59d8
    pOffsets:                       const VkDeviceSize* = 0x7fff0cfdb290
        pOffsets[0]:                    const VkDeviceSize = 0

Thread 0, Frame 0:
vkCmdBindIndexBuffer(commandBuffer, buffer, offset, indexType) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    buffer:                         VkBuffer = 0x21d5258
    offset:                         VkDeviceSize = 0
    indexType:                      VkIndexType = VK_INDEX_TYPE_UINT32 (1)

Thread 0, Frame 0:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    layout:                         VkPipelineLayout = 0x23767d8
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 1
    pDescriptorSets:                const VkDescriptorSet* = 0x7fff0cfdb080
        pDescriptorSets[0]:             const VkDescriptorSet = 0x27c70f8
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 0:
vkCmdDrawIndexed(commandBuffer, indexCount, instanceCount, firstIndex, vertexOffset, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278
    indexCount:                     uint32_t = 149997
    instanceCount:                  uint32_t = 1
    firstIndex:                     uint32_t = 0
    vertexOffset:                   int32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x23a7278

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27c8e88
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdb320:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 0
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c8e88
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 0x7fff0cfdb1a0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 0x2372c88
        framebuffer:                    VkFramebuffer = 0x1e68138
        renderArea:                     VkRect2D = 0x7fff0cfdb1c0:
            offset:                         VkOffset2D = 0x7fff0cfdb1c0:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0x7fff0cfdb1c8:
                width:                          uint32_t = 512
                height:                         uint32_t = 512
        clearValueCount:                uint32_t = 2
        pClearValues:                   const VkClearValue* = 0x27cd9c0
            pClearValues[0]:                const VkClearValue = 0x27cd9c0 (Union):
                color:                          VkClearColorValue = 0x27cd9c0 (Union):
                    float32:                        float[4] = 0x27cd9c0
                        float32[0]:                     float = 0
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 0x27cd9c0
                        int32[0]:                       int32_t = 0
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 0x27cd9c0
                        uint32[0]:                      uint32_t = 0
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 0x27cd9c0:
                    depth:                          float = 0
                    stencil:                        uint32_t = 0
            pClearValues[1]:                const VkClearValue = 0x27cd9d0 (Union):
                color:                          VkClearColorValue = 0x27cd9d0 (Union):
                    float32:                        float[4] = 0x27cd9d0
                        float32[0]:                     float = 1
                        float32[1]:                     float = 0
                        float32[2]:                     float = 6.02558e-44
                        float32[3]:                     float = 1.54255e-41
                    int32:                          int32_t[4] = 0x27cd9d0
                        int32[0]:                       int32_t = 1065353216
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 43
                        int32[3]:                       int32_t = 11008
                    uint32:                         uint32_t[4] = 0x27cd9d0
                        uint32[0]:                      uint32_t = 1065353216
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 43
                        uint32[3]:                      uint32_t = 11008
                depthStencil:                   VkClearDepthStencilValue = 0x27cd9d0:
                    depth:                          float = 1
                    stencil:                        uint32_t = 0
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdafa4:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c8e88
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 0x237ac58

Thread 0, Frame 0:
vkCmdBindVertexBuffers(commandBuffer, firstBinding, bindingCount, pBuffers, pOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c8e88
    firstBinding:                   uint32_t = 0
    bindingCount:                   uint32_t = 1
    pBuffers:                       const VkBuffer* = 0x7fff0cfdb0c0
        pBuffers[0]:                    const VkBuffer = 0x21d59d8
    pOffsets:                       const VkDeviceSize* = 0x7fff0cfdb290
        pOffsets[0]:                    const VkDeviceSize = 0

Thread 0, Frame 0:
vkCmdBindIndexBuffer(commandBuffer, buffer, offset, indexType) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c8e88
    buffer:                         VkBuffer = 0x21d5258
    offset:                         VkDeviceSize = 0
    indexType:                      VkIndexType = VK_INDEX_TYPE_UINT32 (1)

Thread 0, Frame 0:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c8e88
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    layout:                         VkPipelineLayout = 0x23767d8
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 1
    pDescriptorSets:                const VkDescriptorSet* = 0x7fff0cfdb080
        pDescriptorSets[0]:             const VkDescriptorSet = 0x27c7408
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 0:
vkCmdDrawIndexed(commandBuffer, indexCount, instanceCount, firstIndex, vertexOffset, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c8e88
    indexCount:                     uint32_t = 149997
    instanceCount:                  uint32_t = 1
    firstIndex:                     uint32_t = 0
    vertexOffset:                   int32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c8e88

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27c8e88

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27c9ef8
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdb320:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 0
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdBeginRenderPass(commandBuffer, pRenderPassBegin, contents) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c9ef8
    pRenderPassBegin:               const VkRenderPassBeginInfo* = 0x7fff0cfdb1a0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO (43)
        pNext:                          const void* = NULL
        renderPass:                     VkRenderPass = 0x2372c88
        framebuffer:                    VkFramebuffer = 0x1e64cf8
        renderArea:                     VkRect2D = 0x7fff0cfdb1c0:
            offset:                         VkOffset2D = 0x7fff0cfdb1c0:
                x:                              int32_t = 0
                y:                              int32_t = 0
            extent:                         VkExtent2D = 0x7fff0cfdb1c8:
                width:                          uint32_t = 512
                height:                         uint32_t = 512
        clearValueCount:                uint32_t = 2
        pClearValues:                   const VkClearValue* = 0x27cd9c0
            pClearValues[0]:                const VkClearValue = 0x27cd9c0 (Union):
                color:                          VkClearColorValue = 0x27cd9c0 (Union):
                    float32:                        float[4] = 0x27cd9c0
                        float32[0]:                     float = 0
                        float32[1]:                     float = 0
                        float32[2]:                     float = 0
                        float32[3]:                     float = 1
                    int32:                          int32_t[4] = 0x27cd9c0
                        int32[0]:                       int32_t = 0
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 0
                        int32[3]:                       int32_t = 1065353216
                    uint32:                         uint32_t[4] = 0x27cd9c0
                        uint32[0]:                      uint32_t = 0
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 0
                        uint32[3]:                      uint32_t = 1065353216
                depthStencil:                   VkClearDepthStencilValue = 0x27cd9c0:
                    depth:                          float = 0
                    stencil:                        uint32_t = 0
            pClearValues[1]:                const VkClearValue = 0x27cd9d0 (Union):
                color:                          VkClearColorValue = 0x27cd9d0 (Union):
                    float32:                        float[4] = 0x27cd9d0
                        float32[0]:                     float = 1
                        float32[1]:                     float = 0
                        float32[2]:                     float = 6.02558e-44
                        float32[3]:                     float = 1.54255e-41
                    int32:                          int32_t[4] = 0x27cd9d0
                        int32[0]:                       int32_t = 1065353216
                        int32[1]:                       int32_t = 0
                        int32[2]:                       int32_t = 43
                        int32[3]:                       int32_t = 11008
                    uint32:                         uint32_t[4] = 0x27cd9d0
                        uint32[0]:                      uint32_t = 1065353216
                        uint32[1]:                      uint32_t = 0
                        uint32[2]:                      uint32_t = 43
                        uint32[3]:                      uint32_t = 11008
                depthStencil:                   VkClearDepthStencilValue = 0x27cd9d0:
                    depth:                          float = 1
                    stencil:                        uint32_t = 0
    contents:                       VkSubpassContents = VK_SUBPASS_CONTENTS_INLINE (0)

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_B8G8R8A8_SRGB (50)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdafa4:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCmdBindPipeline(commandBuffer, pipelineBindPoint, pipeline) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c9ef8
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    pipeline:                       VkPipeline = 0x237ac58

Thread 0, Frame 0:
vkCmdBindVertexBuffers(commandBuffer, firstBinding, bindingCount, pBuffers, pOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c9ef8
    firstBinding:                   uint32_t = 0
    bindingCount:                   uint32_t = 1
    pBuffers:                       const VkBuffer* = 0x7fff0cfdb0c0
        pBuffers[0]:                    const VkBuffer = 0x21d59d8
    pOffsets:                       const VkDeviceSize* = 0x7fff0cfdb290
        pOffsets[0]:                    const VkDeviceSize = 0

Thread 0, Frame 0:
vkCmdBindIndexBuffer(commandBuffer, buffer, offset, indexType) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c9ef8
    buffer:                         VkBuffer = 0x21d5258
    offset:                         VkDeviceSize = 0
    indexType:                      VkIndexType = VK_INDEX_TYPE_UINT32 (1)

Thread 0, Frame 0:
vkCmdBindDescriptorSets(commandBuffer, pipelineBindPoint, layout, firstSet, descriptorSetCount, pDescriptorSets, dynamicOffsetCount, pDynamicOffsets) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c9ef8
    pipelineBindPoint:              VkPipelineBindPoint = VK_PIPELINE_BIND_POINT_GRAPHICS (0)
    layout:                         VkPipelineLayout = 0x23767d8
    firstSet:                       uint32_t = 0
    descriptorSetCount:             uint32_t = 1
    pDescriptorSets:                const VkDescriptorSet* = 0x7fff0cfdb080
        pDescriptorSets[0]:             const VkDescriptorSet = 0x27c7718
    dynamicOffsetCount:             uint32_t = 0
    pDynamicOffsets:                const uint32_t* = NULL

Thread 0, Frame 0:
vkCmdDrawIndexed(commandBuffer, indexCount, instanceCount, firstIndex, vertexOffset, firstInstance) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c9ef8
    indexCount:                     uint32_t = 149997
    instanceCount:                  uint32_t = 1
    firstIndex:                     uint32_t = 0
    vertexOffset:                   int32_t = 0
    firstInstance:                  uint32_t = 0

Thread 0, Frame 0:
vkCmdEndRenderPass(commandBuffer) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27c9ef8

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27c9ef8

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x7fff0cfdb330:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x23aa528

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x7fff0cfdb330:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x27d2058

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkFenceCreateInfo* = 0x7fff0cfdb350:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 0x238ba58

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x7fff0cfdb330:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x27d27c8

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x7fff0cfdb330:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x27d2af8

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkFenceCreateInfo* = 0x7fff0cfdb350:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 0x238b6a8

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x7fff0cfdb330:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x27d33a8

Thread 0, Frame 0:
vkCreateSemaphore(device, pCreateInfo, pAllocator, pSemaphore) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkSemaphoreCreateInfo* = 0x7fff0cfdb330:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO (9)
        pNext:                          const void* = NULL
        flags:                          VkSemaphoreCreateFlags = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSemaphore:                     VkSemaphore* = 0x27d3848

Thread 0, Frame 0:
vkCreateFence(device, pCreateInfo, pAllocator, pFence) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkFenceCreateInfo* = 0x7fff0cfdb350:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO (8)
        pNext:                          const void* = NULL
        flags:                          VkFenceCreateFlags = 1 (VK_FENCE_CREATE_SIGNALED_BIT)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pFence:                         VkFence* = 0x238b2f8

Thread 0, Frame 0:
vkGetPhysicalDeviceImageFormatProperties(physicalDevice, format, type, tiling, usage, flags, pImageFormatProperties) returns VkResult VK_SUCCESS (0):
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    type:                           VkImageType = VK_IMAGE_TYPE_2D (1)
    tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
    usage:                          VkImageUsageFlags = 6 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
    flags:                          VkImageCreateFlags = 0
    pImageFormatProperties:         VkImageFormatProperties* = 0x7fff0cfdaad0:
        maxExtent:                      VkExtent3D = 0x7fff0cfdaad0:
            width:                          uint32_t = 32768
            height:                         uint32_t = 32768
            depth:                          uint32_t = 1
        maxMipLevels:                   uint32_t = 16
        maxArrayLayers:                 uint32_t = 2048
        sampleCounts:                   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
        maxResourceSize:                VkDeviceSize = 18446744073709551615

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfda9c0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateImage(device, pCreateInfo, pAllocator, pImage) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkImageCreateInfo* = 0x7fff0cfdab70:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO (14)
        pNext:                          const void* = NULL
        flags:                          VkImageCreateFlags = 0
        imageType:                      VkImageType = VK_IMAGE_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
        extent:                         VkExtent3D = 0x7fff0cfdab8c:
            width:                          uint32_t = 512
            height:                         uint32_t = 512
            depth:                          uint32_t = 1
        mipLevels:                      uint32_t = 1
        arrayLayers:                    uint32_t = 1
        samples:                        VkSampleCountFlagBits = 1 (VK_SAMPLE_COUNT_1_BIT)
        tiling:                         VkImageTiling = VK_IMAGE_TILING_OPTIMAL (0)
        usage:                          VkImageUsageFlags = 6 (VK_IMAGE_USAGE_TRANSFER_DST_BIT | VK_IMAGE_USAGE_SAMPLED_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
        initialLayout:                  VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pImage:                         VkImage* = 0x23a8758

Thread 0, Frame 0:
vkGetImageMemoryRequirements(device, image, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    image:                          VkImage = 0x23a8758
    pMemoryRequirements:            VkMemoryRequirements* = 0x27d4610:
        size:                           VkDeviceSize = 1048576
        alignment:                      VkDeviceSize = 1024
        memoryTypeBits:                 uint32_t = 130

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdaab0:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetImageMemoryRequirements(device, image, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    image:                          VkImage = 0x23a8758
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdad10:
        size:                           VkDeviceSize = 1048576
        alignment:                      VkDeviceSize = 1024
        memoryTypeBits:                 uint32_t = 130

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdad28:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdad2c
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdad2c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdad34:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdad3c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdad44:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdad4c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdad54:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdad5c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdad64:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdad6c:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdad74:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdad7c:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdae30
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdae30:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdae40:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdae50:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdaba0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 1048576
        memoryTypeIndex:                uint32_t = 7
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x27d4ab8

Thread 0, Frame 0:
vkBindImageMemory(device, image, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    image:                          VkImage = 0x23a8758
    memory:                         VkDeviceMemory = 0x27d4ab8
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x7fff0cfdad80:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0x1ddabb8
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 0x7fff0cfdae88
        pCommandBuffers[0]:             VkCommandBuffer = 0x27d5c58

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27d5c58
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdae90:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27d5c58
    srcStageMask:                   VkPipelineStageFlags = 1 (VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT)
    dstStageMask:                   VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dependencyFlags:                VkDependencyFlags = 0
    memoryBarrierCount:             uint32_t = 0
    pMemoryBarriers:                const VkMemoryBarrier* = NULL
    bufferMemoryBarrierCount:       uint32_t = 0
    pBufferMemoryBarriers:          const VkBufferMemoryBarrier* = NULL
    imageMemoryBarrierCount:        uint32_t = 1
    pImageMemoryBarriers:           const VkImageMemoryBarrier* = 0x27d7f98
        pImageMemoryBarriers[0]:        const VkImageMemoryBarrier = 0x27d7f98:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:                          const void* = NULL
            srcAccessMask:                  VkAccessFlags = 0 (VK_ACCESS_NONE_KHR)
            dstAccessMask:                  VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_UNDEFINED (0)
            newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            srcQueueFamilyIndex:            uint32_t = 4294967295
            dstQueueFamilyIndex:            uint32_t = 4294967295
            image:                          VkImage = 0x23a8758
            subresourceRange:               VkImageSubresourceRange = 0x27d7fc8:
                aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:                   uint32_t = 0
                levelCount:                     uint32_t = 1
                baseArrayLayer:                 uint32_t = 0
                layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27d5c58

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x27d7f98
        pSubmits[0]:                    const VkSubmitInfo = 0x27d7f98:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 0
            pWaitSemaphores:                const VkSemaphore* = NULL
            pWaitDstStageMask:              const VkPipelineStageFlags* = NULL
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x27d8260
                pCommandBuffers[0]:             const VkCommandBuffer = 0x27d5c58
            signalSemaphoreCount:           uint32_t = 0
            pSignalSemaphores:              const VkSemaphore* = NULL
    fence:                          VkFence = 0

Thread 0, Frame 0:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8

Thread 0, Frame 0:
vkFreeCommandBuffers(device, commandPool, commandBufferCount, pCommandBuffers) returns void:
    device:                         VkDevice = 0x200f6d8
    commandPool:                    VkCommandPool = 0x1ddabb8
    commandBufferCount:             uint32_t = 1
    pCommandBuffers:                const VkCommandBuffer* = 0x7fff0cfdae88
        pCommandBuffers[0]:             const VkCommandBuffer = 0x27d5c58

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x7fff0cfdad80:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0x1ddabb8
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 0x7fff0cfdae88
        pCommandBuffers[0]:             VkCommandBuffer = 0x27d5c58

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27d5c58
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdae90:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdPipelineBarrier(commandBuffer, srcStageMask, dstStageMask, dependencyFlags, memoryBarrierCount, pMemoryBarriers, bufferMemoryBarrierCount, pBufferMemoryBarriers, imageMemoryBarrierCount, pImageMemoryBarriers) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27d5c58
    srcStageMask:                   VkPipelineStageFlags = 4096 (VK_PIPELINE_STAGE_TRANSFER_BIT)
    dstStageMask:                   VkPipelineStageFlags = 128 (VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT)
    dependencyFlags:                VkDependencyFlags = 0
    memoryBarrierCount:             uint32_t = 0
    pMemoryBarriers:                const VkMemoryBarrier* = NULL
    bufferMemoryBarrierCount:       uint32_t = 0
    pBufferMemoryBarriers:          const VkBufferMemoryBarrier* = NULL
    imageMemoryBarrierCount:        uint32_t = 1
    pImageMemoryBarriers:           const VkImageMemoryBarrier* = 0x27d7f98
        pImageMemoryBarriers[0]:        const VkImageMemoryBarrier = 0x27d7f98:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER (45)
            pNext:                          const void* = NULL
            srcAccessMask:                  VkAccessFlags = 4096 (VK_ACCESS_TRANSFER_WRITE_BIT)
            dstAccessMask:                  VkAccessFlags = 32 (VK_ACCESS_SHADER_READ_BIT)
            oldLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL (7)
            newLayout:                      VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            srcQueueFamilyIndex:            uint32_t = 4294967295
            dstQueueFamilyIndex:            uint32_t = 4294967295
            image:                          VkImage = 0x23a8758
            subresourceRange:               VkImageSubresourceRange = 0x27d7fc8:
                aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
                baseMipLevel:                   uint32_t = 0
                levelCount:                     uint32_t = 1
                baseArrayLayer:                 uint32_t = 0
                layerCount:                     uint32_t = 1

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27d5c58

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x27d7f98
        pSubmits[0]:                    const VkSubmitInfo = 0x27d7f98:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 0
            pWaitSemaphores:                const VkSemaphore* = NULL
            pWaitDstStageMask:              const VkPipelineStageFlags* = NULL
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x27d82e0
                pCommandBuffers[0]:             const VkCommandBuffer = 0x27d5c58
            signalSemaphoreCount:           uint32_t = 0
            pSignalSemaphores:              const VkSemaphore* = NULL
    fence:                          VkFence = 0

Thread 0, Frame 0:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8

Thread 0, Frame 0:
vkFreeCommandBuffers(device, commandPool, commandBufferCount, pCommandBuffers) returns void:
    device:                         VkDevice = 0x200f6d8
    commandPool:                    VkCommandPool = 0x1ddabb8
    commandBufferCount:             uint32_t = 1
    pCommandBuffers:                const VkCommandBuffer* = 0x7fff0cfdae88
        pCommandBuffers[0]:             const VkCommandBuffer = 0x27d5c58

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdab60:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkCreateImageView(device, pCreateInfo, pAllocator, pView) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkImageViewCreateInfo* = 0x7fff0cfdae40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO (15)
        pNext:                          const void* = NULL
        flags:                          VkImageViewCreateFlags = 0
        image:                          VkImage = 0x23a8758
        viewType:                       VkImageViewType = VK_IMAGE_VIEW_TYPE_2D (1)
        format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
        components:                     VkComponentMapping = 0x7fff0cfdae68:
            r:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            g:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            b:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
            a:                              VkComponentSwizzle = VK_COMPONENT_SWIZZLE_IDENTITY (0)
        subresourceRange:               VkImageSubresourceRange = 0x7fff0cfdae78:
            aspectMask:                     VkImageAspectFlags = 1 (VK_IMAGE_ASPECT_COLOR_BIT)
            baseMipLevel:                   uint32_t = 0
            levelCount:                     uint32_t = 1
            baseArrayLayer:                 uint32_t = 0
            layerCount:                     uint32_t = 1
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pView:                          VkImageView* = 0x27d79f8

Thread 0, Frame 0:
vkGetPhysicalDeviceFormatProperties(physicalDevice, format, pFormatProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    format:                         VkFormat = VK_FORMAT_R8G8B8A8_SRGB (43)
    pFormatProperties:              VkFormatProperties* = 0x7fff0cfdae60:
        linearTilingFeatures:           VkFormatFeatureFlags = 119809 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        optimalTilingFeatures:          VkFormatFeatureFlags = 122241 (VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT | VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT | VK_FORMAT_FEATURE_BLIT_SRC_BIT | VK_FORMAT_FEATURE_BLIT_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT | VK_FORMAT_FEATURE_TRANSFER_SRC_BIT | VK_FORMAT_FEATURE_TRANSFER_DST_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT)
        bufferFeatures:                 VkFormatFeatureFlags = 0

Thread 0, Frame 0:
vkGetPhysicalDeviceProperties(physicalDevice, pProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pProperties:                    VkPhysicalDeviceProperties* = 0x7fff0cfdb030:
        apiVersion:                     uint32_t = 4202651
        driverVersion:                  uint32_t = 1930870976
        vendorID:                       uint32_t = 4318
        deviceID:                       uint32_t = 7200
        deviceType:                     VkPhysicalDeviceType = VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU (2)
        deviceName:                     char[VK_MAX_PHYSICAL_DEVICE_NAME_SIZE] = "GeForce GTX 1060"
        pipelineCacheUUID:              uint8_t[VK_UUID_SIZE] = 0x7fff0cfdb144
            pipelineCacheUUID[0]:           uint8_t = 31
            pipelineCacheUUID[1]:           uint8_t = 70
            pipelineCacheUUID[2]:           uint8_t = 121
            pipelineCacheUUID[3]:           uint8_t = 230
            pipelineCacheUUID[4]:           uint8_t = 160
            pipelineCacheUUID[5]:           uint8_t = 39
            pipelineCacheUUID[6]:           uint8_t = 9
            pipelineCacheUUID[7]:           uint8_t = 70
            pipelineCacheUUID[8]:           uint8_t = 127
            pipelineCacheUUID[9]:           uint8_t = 182
            pipelineCacheUUID[10]:          uint8_t = 114
            pipelineCacheUUID[11]:          uint8_t = 78
            pipelineCacheUUID[12]:          uint8_t = 168
            pipelineCacheUUID[13]:          uint8_t = 85
            pipelineCacheUUID[14]:          uint8_t = 44
            pipelineCacheUUID[15]:          uint8_t = 175
        limits:                         VkPhysicalDeviceLimits = 0x7fff0cfdb158:
            maxImageDimension1D:            uint32_t = 32768
            maxImageDimension2D:            uint32_t = 32768
            maxImageDimension3D:            uint32_t = 16384
            maxImageDimensionCube:          uint32_t = 32768
            maxImageArrayLayers:            uint32_t = 2048
            maxTexelBufferElements:         uint32_t = 134217728
            maxUniformBufferRange:          uint32_t = 65536
            maxStorageBufferRange:          uint32_t = 4294967295
            maxPushConstantsSize:           uint32_t = 256
            maxMemoryAllocationCount:       uint32_t = 4294967295
            maxSamplerAllocationCount:      uint32_t = 4000
            bufferImageGranularity:         VkDeviceSize = 1024
            sparseAddressSpaceSize:         VkDeviceSize = 1099511627775
            maxBoundDescriptorSets:         uint32_t = 32
            maxPerStageDescriptorSamplers:  uint32_t = 1048576
            maxPerStageDescriptorUniformBuffers: uint32_t = 15
            maxPerStageDescriptorStorageBuffers: uint32_t = 1048576
            maxPerStageDescriptorSampledImages: uint32_t = 1048576
            maxPerStageDescriptorStorageImages: uint32_t = 1048576
            maxPerStageDescriptorInputAttachments: uint32_t = 1048576
            maxPerStageResources:           uint32_t = 4294967295
            maxDescriptorSetSamplers:       uint32_t = 1048576
            maxDescriptorSetUniformBuffers: uint32_t = 180
            maxDescriptorSetUniformBuffersDynamic: uint32_t = 15
            maxDescriptorSetStorageBuffers: uint32_t = 1048576
            maxDescriptorSetStorageBuffersDynamic: uint32_t = 16
            maxDescriptorSetSampledImages:  uint32_t = 1048576
            maxDescriptorSetStorageImages:  uint32_t = 1048576
            maxDescriptorSetInputAttachments: uint32_t = 1048576
            maxVertexInputAttributes:       uint32_t = 32
            maxVertexInputBindings:         uint32_t = 32
            maxVertexInputAttributeOffset:  uint32_t = 2047
            maxVertexInputBindingStride:    uint32_t = 2048
            maxVertexOutputComponents:      uint32_t = 128
            maxTessellationGenerationLevel: uint32_t = 64
            maxTessellationPatchSize:       uint32_t = 32
            maxTessellationControlPerVertexInputComponents: uint32_t = 128
            maxTessellationControlPerVertexOutputComponents: uint32_t = 128
            maxTessellationControlPerPatchOutputComponents: uint32_t = 120
            maxTessellationControlTotalOutputComponents: uint32_t = 4216
            maxTessellationEvaluationInputComponents: uint32_t = 128
            maxTessellationEvaluationOutputComponents: uint32_t = 128
            maxGeometryShaderInvocations:   uint32_t = 32
            maxGeometryInputComponents:     uint32_t = 128
            maxGeometryOutputComponents:    uint32_t = 128
            maxGeometryOutputVertices:      uint32_t = 1024
            maxGeometryTotalOutputComponents: uint32_t = 1024
            maxFragmentInputComponents:     uint32_t = 128
            maxFragmentOutputAttachments:   uint32_t = 8
            maxFragmentDualSrcAttachments:  uint32_t = 1
            maxFragmentCombinedOutputResources: uint32_t = 16
            maxComputeSharedMemorySize:     uint32_t = 49152
            maxComputeWorkGroupCount:       uint32_t[3] = 0x7fff0cfdb234
                maxComputeWorkGroupCount[0]:    uint32_t = 2147483647
                maxComputeWorkGroupCount[1]:    uint32_t = 65535
                maxComputeWorkGroupCount[2]:    uint32_t = 65535
            maxComputeWorkGroupInvocations: uint32_t = 1536
            maxComputeWorkGroupSize:        uint32_t[3] = 0x7fff0cfdb244
                maxComputeWorkGroupSize[0]:     uint32_t = 1536
                maxComputeWorkGroupSize[1]:     uint32_t = 1024
                maxComputeWorkGroupSize[2]:     uint32_t = 64
            subPixelPrecisionBits:          uint32_t = 8
            subTexelPrecisionBits:          uint32_t = 8
            mipmapPrecisionBits:            uint32_t = 8
            maxDrawIndexedIndexValue:       uint32_t = 4294967295
            maxDrawIndirectCount:           uint32_t = 4294967295
            maxSamplerLodBias:              float = 15
            maxSamplerAnisotropy:           float = 16
            maxViewports:                   uint32_t = 16
            maxViewportDimensions:          uint32_t[2] = 0x7fff0cfdb270
                maxViewportDimensions[0]:       uint32_t = 32768
                maxViewportDimensions[1]:       uint32_t = 32768
            viewportBoundsRange:            float[2] = 0x7fff0cfdb278
                viewportBoundsRange[0]:         float = -65536
                viewportBoundsRange[1]:         float = 65536
            viewportSubPixelBits:           uint32_t = 8
            minMemoryMapAlignment:          size_t = 64
            minTexelBufferOffsetAlignment:  VkDeviceSize = 16
            minUniformBufferOffsetAlignment: VkDeviceSize = 256
            minStorageBufferOffsetAlignment: VkDeviceSize = 16
            minTexelOffset:                 int32_t = -8
            maxTexelOffset:                 uint32_t = 7
            minTexelGatherOffset:           int32_t = -32
            maxTexelGatherOffset:           uint32_t = 31
            minInterpolationOffset:         float = -0.5
            maxInterpolationOffset:         float = 0.4375
            subPixelInterpolationOffsetBits: uint32_t = 4
            maxFramebufferWidth:            uint32_t = 32768
            maxFramebufferHeight:           uint32_t = 32768
            maxFramebufferLayers:           uint32_t = 2048
            framebufferColorSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferDepthSampleCounts:   VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            framebufferStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            framebufferNoAttachmentsSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            maxColorAttachments:            uint32_t = 8
            sampledImageColorSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageIntegerSampleCounts: VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageDepthSampleCounts:  VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            sampledImageStencilSampleCounts: VkSampleCountFlags = 31 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT | VK_SAMPLE_COUNT_16_BIT)
            storageImageSampleCounts:       VkSampleCountFlags = 15 (VK_SAMPLE_COUNT_1_BIT | VK_SAMPLE_COUNT_2_BIT | VK_SAMPLE_COUNT_4_BIT | VK_SAMPLE_COUNT_8_BIT)
            maxSampleMaskWords:             uint32_t = 1
            timestampComputeAndGraphics:    VkBool32 = 1
            timestampPeriod:                float = 1
            maxClipDistances:               uint32_t = 8
            maxCullDistances:               uint32_t = 8
            maxCombinedClipAndCullDistances: uint32_t = 8
            discreteQueuePriorities:        uint32_t = 2
            pointSizeRange:                 float[2] = 0x7fff0cfdb314
                pointSizeRange[0]:              float = 1
                pointSizeRange[1]:              float = 2047.94
            lineWidthRange:                 float[2] = 0x7fff0cfdb31c
                lineWidthRange[0]:              float = 1
                lineWidthRange[1]:              float = 64
            pointSizeGranularity:           float = 0.0625
            lineWidthGranularity:           float = 0.0625
            strictLines:                    VkBool32 = 1
            standardSampleLocations:        VkBool32 = 1
            optimalBufferCopyOffsetAlignment: VkDeviceSize = 1
            optimalBufferCopyRowPitchAlignment: VkDeviceSize = 1
            nonCoherentAtomSize:            VkDeviceSize = 64
        sparseProperties:               VkPhysicalDeviceSparseProperties = 0x7fff0cfdb350:
            residencyStandard2DBlockShape:  VkBool32 = 1
            residencyStandard2DMultisampleBlockShape: VkBool32 = 1
            residencyStandard3DBlockShape:  VkBool32 = 1
            residencyAlignedMipSize:        VkBool32 = 0
            residencyNonResidentStrict:     VkBool32 = 1

Thread 0, Frame 0:
vkCreateSampler(device, pCreateInfo, pAllocator, pSampler) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkSamplerCreateInfo* = 0x7fff0cfdae40:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO (31)
        pNext:                          const void* = NULL
        flags:                          VkSamplerCreateFlags = 0
        magFilter:                      VkFilter = VK_FILTER_LINEAR (1)
        minFilter:                      VkFilter = VK_FILTER_LINEAR (1)
        mipmapMode:                     VkSamplerMipmapMode = VK_SAMPLER_MIPMAP_MODE_LINEAR (1)
        addressModeU:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeV:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        addressModeW:                   VkSamplerAddressMode = VK_SAMPLER_ADDRESS_MODE_REPEAT (0)
        mipLodBias:                     float = 0
        anisotropyEnable:               VkBool32 = 1
        maxAnisotropy:                  float = 16
        compareEnable:                  VkBool32 = 0
        compareOp:                      VkCompareOp = VK_COMPARE_OP_ALWAYS (7)
        minLod:                         float = 0
        maxLod:                         float = 0
        borderColor:                    VkBorderColor = VK_BORDER_COLOR_INT_OPAQUE_BLACK (3)
        unnormalizedCoordinates:        VkBool32 = 0
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSampler:                       VkSampler* = 0x27e0b78

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdaf10:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 3145728
        usage:                          VkBufferUsageFlags = 35 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT | VK_BUFFER_USAGE_TRANSFER_DST_BIT | VK_BUFFER_USAGE_STORAGE_BUFFER_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x27d7428

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27d7428
    pMemoryRequirements:            VkMemoryRequirements* = 0x27d7690:
        size:                           VkDeviceSize = 3145728
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27d7428
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdafe8:
        size:                           VkDeviceSize = 3145728
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb000:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb004
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb004:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb00c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb014:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb01c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb024:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb02c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb034:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb03c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb044:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb04c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb054:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb108
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb108:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb118:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb128:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdaea0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 3145728
        memoryTypeIndex:                uint32_t = 7
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x27d7e28

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27d7428
    memory:                         VkDeviceMemory = 0x27d7e28
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkCreateBuffer(device, pCreateInfo, pAllocator, pBuffer) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkBufferCreateInfo* = 0x7fff0cfdaf10:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO (12)
        pNext:                          const void* = NULL
        flags:                          VkBufferCreateFlags = 0
        size:                           VkDeviceSize = 3145728
        usage:                          VkBufferUsageFlags = 1 (VK_BUFFER_USAGE_TRANSFER_SRC_BIT)
        sharingMode:                    VkSharingMode = VK_SHARING_MODE_EXCLUSIVE (0)
        queueFamilyIndexCount:          uint32_t = 0
        pQueueFamilyIndices:            const uint32_t* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pBuffer:                        VkBuffer* = 0x27d90b8

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27d90b8
    pMemoryRequirements:            VkMemoryRequirements* = 0x27d9390:
        size:                           VkDeviceSize = 3145728
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetBufferMemoryRequirements(device, buffer, pMemoryRequirements) returns void:
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27d90b8
    pMemoryRequirements:            VkMemoryRequirements* = 0x7fff0cfdafe8:
        size:                           VkDeviceSize = 3145728
        alignment:                      VkDeviceSize = 256
        memoryTypeBits:                 uint32_t = 1921

Thread 0, Frame 0:
vkGetPhysicalDeviceMemoryProperties(physicalDevice, pMemoryProperties) returns void:
    physicalDevice:                 VkPhysicalDevice = 0x1e682e0
    pMemoryProperties:              VkPhysicalDeviceMemoryProperties* = 0x7fff0cfdb000:
        memoryTypeCount:                uint32_t = 11
        memoryTypes:                    VkMemoryType[VK_MAX_MEMORY_TYPES] = 0x7fff0cfdb004
            memoryTypes[0]:                 VkMemoryType = 0x7fff0cfdb004:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[1]:                 VkMemoryType = 0x7fff0cfdb00c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[2]:                 VkMemoryType = 0x7fff0cfdb014:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[3]:                 VkMemoryType = 0x7fff0cfdb01c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[4]:                 VkMemoryType = 0x7fff0cfdb024:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[5]:                 VkMemoryType = 0x7fff0cfdb02c:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[6]:                 VkMemoryType = 0x7fff0cfdb034:
                propertyFlags:                  VkMemoryPropertyFlags = 0
                heapIndex:                      uint32_t = 1
            memoryTypes[7]:                 VkMemoryType = 0x7fff0cfdb03c:
                propertyFlags:                  VkMemoryPropertyFlags = 1 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT)
                heapIndex:                      uint32_t = 0
            memoryTypes[8]:                 VkMemoryType = 0x7fff0cfdb044:
                propertyFlags:                  VkMemoryPropertyFlags = 6 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[9]:                 VkMemoryType = 0x7fff0cfdb04c:
                propertyFlags:                  VkMemoryPropertyFlags = 14 (VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT)
                heapIndex:                      uint32_t = 1
            memoryTypes[10]:                VkMemoryType = 0x7fff0cfdb054:
                propertyFlags:                  VkMemoryPropertyFlags = 7 (VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT | VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT)
                heapIndex:                      uint32_t = 2
        memoryHeapCount:                uint32_t = 3
        memoryHeaps:                    VkMemoryHeap[VK_MAX_MEMORY_HEAPS] = 0x7fff0cfdb108
            memoryHeaps[0]:                 VkMemoryHeap = 0x7fff0cfdb108:
                size:                           VkDeviceSize = 6442450944
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)
            memoryHeaps[1]:                 VkMemoryHeap = 0x7fff0cfdb118:
                size:                           VkDeviceSize = 12464686080
                flags:                          VkMemoryHeapFlags = 0
            memoryHeaps[2]:                 VkMemoryHeap = 0x7fff0cfdb128:
                size:                           VkDeviceSize = 257949696
                flags:                          VkMemoryHeapFlags = 1 (VK_MEMORY_HEAP_DEVICE_LOCAL_BIT)

Thread 0, Frame 0:
vkAllocateMemory(device, pAllocateInfo, pAllocator, pMemory) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkMemoryAllocateInfo* = 0x7fff0cfdaea0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO (5)
        pNext:                          const void* = NULL
        allocationSize:                 VkDeviceSize = 3145728
        memoryTypeIndex:                uint32_t = 8
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pMemory:                        VkDeviceMemory* = 0x27d9538

Thread 0, Frame 0:
vkBindBufferMemory(device, buffer, memory, memoryOffset) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    buffer:                         VkBuffer = 0x27d90b8
    memory:                         VkDeviceMemory = 0x27d9538
    memoryOffset:                   VkDeviceSize = 0

Thread 0, Frame 0:
vkAllocateCommandBuffers(device, pAllocateInfo, pCommandBuffers) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkCommandBufferAllocateInfo* = 0x7fff0cfdb140:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO (40)
        pNext:                          const void* = NULL
        commandPool:                    VkCommandPool = 0x1ddabb8
        level:                          VkCommandBufferLevel = VK_COMMAND_BUFFER_LEVEL_PRIMARY (0)
        commandBufferCount:             uint32_t = 1
    pCommandBuffers:                VkCommandBuffer* = 0x7fff0cfdb278
        pCommandBuffers[0]:             VkCommandBuffer = 0x27d5c58

Thread 0, Frame 0:
vkBeginCommandBuffer(commandBuffer, pBeginInfo) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27d5c58
    pBeginInfo:                     const VkCommandBufferBeginInfo* = 0x7fff0cfdb2d0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO (42)
        pNext:                          const void* = NULL
        flags:                          VkCommandBufferUsageFlags = 1 (VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT)
        pInheritanceInfo:               const VkCommandBufferInheritanceInfo* = UNUSED

Thread 0, Frame 0:
vkCmdCopyBuffer(commandBuffer, srcBuffer, dstBuffer, regionCount, pRegions) returns void:
    commandBuffer:                  VkCommandBuffer = 0x27d5c58
    srcBuffer:                      VkBuffer = 0x27d90b8
    dstBuffer:                      VkBuffer = 0x27d7428
    regionCount:                    uint32_t = 1
    pRegions:                       const VkBufferCopy* = 0x7fff0cfdb2d0
        pRegions[0]:                    const VkBufferCopy = 0x7fff0cfdb2d0:
            srcOffset:                      VkDeviceSize = 0
            dstOffset:                      VkDeviceSize = 0
            size:                           VkDeviceSize = 3145728

Thread 0, Frame 0:
vkEndCommandBuffer(commandBuffer) returns VkResult VK_SUCCESS (0):
    commandBuffer:                  VkCommandBuffer = 0x27d5c58

Thread 0, Frame 0:
vkQueueSubmit(queue, submitCount, pSubmits, fence) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8
    submitCount:                    uint32_t = 1
    pSubmits:                       const VkSubmitInfo* = 0x27d7f98
        pSubmits[0]:                    const VkSubmitInfo = 0x27d7f98:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_SUBMIT_INFO (4)
            pNext:                          const void* = NULL
            waitSemaphoreCount:             uint32_t = 0
            pWaitSemaphores:                const VkSemaphore* = NULL
            pWaitDstStageMask:              const VkPipelineStageFlags* = NULL
            commandBufferCount:             uint32_t = 1
            pCommandBuffers:                const VkCommandBuffer* = 0x27d8020
                pCommandBuffers[0]:             const VkCommandBuffer = 0x27d5c58
            signalSemaphoreCount:           uint32_t = 0
            pSignalSemaphores:              const VkSemaphore* = NULL
    fence:                          VkFence = 0

Thread 0, Frame 0:
vkQueueWaitIdle(queue) returns VkResult VK_SUCCESS (0):
    queue:                          VkQueue = 0x1e6d8b8

Thread 0, Frame 0:
vkFreeCommandBuffers(device, commandPool, commandBufferCount, pCommandBuffers) returns void:
    device:                         VkDevice = 0x200f6d8
    commandPool:                    VkCommandPool = 0x1ddabb8
    commandBufferCount:             uint32_t = 1
    pCommandBuffers:                const VkCommandBuffer* = 0x7fff0cfdb278
        pCommandBuffers[0]:             const VkCommandBuffer = 0x27d5c58

Thread 0, Frame 0:
vkCreateDescriptorSetLayout(device, pCreateInfo, pAllocator, pSetLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkDescriptorSetLayoutCreateInfo* = 0x7fff0cfdb200:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO (32)
        pNext:                          const void* = NULL
        flags:                          VkDescriptorSetLayoutCreateFlags = 0
        bindingCount:                   uint32_t = 2
        pBindings:                      const VkDescriptorSetLayoutBinding* = 0x27da6c8
            pBindings[0]:                   const VkDescriptorSetLayoutBinding = 0x27da6c8:
                binding:                        uint32_t = 0
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE (3)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
            pBindings[1]:                   const VkDescriptorSetLayoutBinding = 0x27da6e0:
                binding:                        uint32_t = 1
                descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
                descriptorCount:                uint32_t = 1
                stageFlags:                     VkShaderStageFlags = 32 (VK_SHADER_STAGE_COMPUTE_BIT)
                pImmutableSamplers:             const VkSampler* = UNUSED
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pSetLayout:                     VkDescriptorSetLayout* = 0x27d9f18

Thread 0, Frame 0:
vkCreatePipelineLayout(device, pCreateInfo, pAllocator, pPipelineLayout) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pCreateInfo:                    const VkPipelineLayoutCreateInfo* = 0x7fff0cfdb1f0:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO (30)
        pNext:                          const void* = NULL
        flags:                          VkPipelineLayoutCreateFlags = 0
        setLayoutCount:                 uint32_t = 1
        pSetLayouts:                    const VkDescriptorSetLayout* = 0x27d8260
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 0x27d9f18
        pushConstantRangeCount:         uint32_t = 0
        pPushConstantRanges:            const VkPushConstantRange* = NULL
    pAllocator:                     const VkAllocationCallbacks* = NULL
    pPipelineLayout:                VkPipelineLayout* = 0x27dad88

Thread 0, Frame 0:
vkAllocateDescriptorSets(device, pAllocateInfo, pDescriptorSets) returns VkResult VK_SUCCESS (0):
    device:                         VkDevice = 0x200f6d8
    pAllocateInfo:                  const VkDescriptorSetAllocateInfo* = 0x27de700:
        sType:                          VkStructureType = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO (34)
        pNext:                          const void* = NULL
        descriptorPool:                 VkDescriptorPool = 0x237e228
        descriptorSetCount:             uint32_t = 3
        pSetLayouts:                    const VkDescriptorSetLayout* = 0x27de730
            pSetLayouts[0]:                 const VkDescriptorSetLayout = 0x27d9f18
            pSetLayouts[1]:                 const VkDescriptorSetLayout = 0x27d9f18
            pSetLayouts[2]:                 const VkDescriptorSetLayout = 0x27d9f18
    pDescriptorSets:                VkDescriptorSet* = 0x27de600
        pDescriptorSets[0]:             VkDescriptorSet = 0x27c7a28
        pDescriptorSets[1]:             VkDescriptorSet = 0x27c7d38
        pDescriptorSets[2]:             VkDescriptorSet = 0x27c6de8

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 0x200f6d8
    descriptorWriteCount:           uint32_t = 2
    pDescriptorWrites:              const VkWriteDescriptorSet* = 0x1957918
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 0x1957918:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c7a28
            dstBinding:                     uint32_t = 0
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE (3)
            pImageInfo:                     const VkDescriptorImageInfo* = 0x27e00e0
                pImageInfo[0]:                  const VkDescriptorImageInfo = 0x27e00e0:
                    sampler:                        VkSampler = 0x27e0b78
                    imageView:                      VkImageView = 0x27d79f8
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[1]:           const VkWriteDescriptorSet = 0x1957958:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c7a28
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 0x27e0100
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 0x27e0100:
                    buffer:                         VkBuffer = 0x27d7428
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 12
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 0x200f6d8
    descriptorWriteCount:           uint32_t = 2
    pDescriptorWrites:              const VkWriteDescriptorSet* = 0x1957918
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 0x1957918:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c7d38
            dstBinding:                     uint32_t = 0
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE (3)
            pImageInfo:                     const VkDescriptorImageInfo* = 0x27e00e0
                pImageInfo[0]:                  const VkDescriptorImageInfo = 0x27e00e0:
                    sampler:                        VkSampler = 0x27e0b78
                    imageView:                      VkImageView = 0x27d79f8
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[1]:           const VkWriteDescriptorSet = 0x1957958:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c7d38
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 0x27e0100
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 0x27e0100:
                    buffer:                         VkBuffer = 0x27d7428
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 12
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

Thread 0, Frame 0:
vkUpdateDescriptorSets(device, descriptorWriteCount, pDescriptorWrites, descriptorCopyCount, pDescriptorCopies) returns void:
    device:                         VkDevice = 0x200f6d8
    descriptorWriteCount:           uint32_t = 2
    pDescriptorWrites:              const VkWriteDescriptorSet* = 0x1957918
        pDescriptorWrites[0]:           const VkWriteDescriptorSet = 0x1957918:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c6de8
            dstBinding:                     uint32_t = 0
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_IMAGE (3)
            pImageInfo:                     const VkDescriptorImageInfo* = 0x27e00e0
                pImageInfo[0]:                  const VkDescriptorImageInfo = 0x27e00e0:
                    sampler:                        VkSampler = 0x27e0b78
                    imageView:                      VkImageView = 0x27d79f8
                    imageLayout:                    VkImageLayout = VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL (5)
            pBufferInfo:                    const VkDescriptorBufferInfo* = UNUSED
            pTexelBufferView:               const VkBufferView* = UNUSED
        pDescriptorWrites[1]:           const VkWriteDescriptorSet = 0x1957958:
            sType:                          VkStructureType = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET (35)
            pNext:                          const void* = NULL
            dstSet:                         VkDescriptorSet = 0x27c6de8
            dstBinding:                     uint32_t = 1
            dstArrayElement:                uint32_t = 0
            descriptorCount:                uint32_t = 1
            descriptorType:                 VkDescriptorType = VK_DESCRIPTOR_TYPE_STORAGE_BUFFER (7)
            pImageInfo:                     const VkDescriptorImageInfo* = UNUSED
            pBufferInfo:                    const VkDescriptorBufferInfo* = 0x27e0100
                pBufferInfo[0]:                 const VkDescriptorBufferInfo = 0x27e0100:
                    buffer:                         VkBuffer = 0x27d7428
                    offset:                         VkDeviceSize = 0
                    range:                          VkDeviceSize = 12
            pTexelBufferView:               const VkBufferView* = UNUSED
    descriptorCopyCount:            uint32_t = 0
    pDescriptorCopies:              const VkCopyDescriptorSet* = NULL

